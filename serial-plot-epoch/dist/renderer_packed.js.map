{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./renderer.js","webpack:///./node_modules/d3/d3.js","webpack:///./node_modules/epoch-charting/dist/js/epoch.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","dataSets","Array","numPlots","charts","now","Date","getTime","label","values","time","y","$","epoch","type","data","axes","fps","queueSize","range","renderPlots","push","pointsArr","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3","version","d3_arraySlice","slice","d3_array","list","d3_document","this","document","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","e","length","array","createElement","style","setProperty","error","d3_element_prototype","Element","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","ascending","descending","min","f","max","extent","sum","mean","j","quantile","H","h","Math","floor","v","median","numbers","sort","variance","deviation","apply","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","random","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","keys","map","entries","merge","arrays","merged","abs","d3_class","ctor","properties","d3_Map","_","start","stop","step","Infinity","Error","k","d3_range_integerScale","forEach","set","isArray","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","has","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","order","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listeners","listenerByName","event","z","on","listener","indexOf","concat","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","requote","replace","d3_requote_re","d3_subclass","__proto__","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","selection","select","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","parentNode","__data__","selectAll","d3_nsXhtml","d3_nsPrefix","svg","xhtml","xlink","xml","xmlns","d3_selection_attr","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","split","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","prefix","attr","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","textContent","html","innerHTML","append","appendChild","insert","before","insertBefore","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","update","enter","exit","datum","filter","next","nextSibling","comparator","args","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","d3_selection_onFilter","addEventListener","match","upgroup","j0","d3_selection_enterInsertBefore","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","w","suppressClick","off","setTimeout","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","window","scrollX","scrollY","ctm","position","top","margin","padding","border","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","id","subject","move","end","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","S","ux0","uy0","w0","ux1","uy1","w1","d2","log","d1","b0","b1","r0","r1","coshr0","u","d3_tanh","d3_sinh","duration","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","g","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","pow","transition","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","q","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","color","toString","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","result","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","typedResponse","parse","formatRow","formatValue","join","parseRows","Function","JSON","stringify","eol","EOL","EOF","rows","N","I","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","formatPrefix","precision","d3_format_re","d3_format_types","String","fromCharCode","X","toPrecision","toExponential","toFixed","d3_format_typeDefault","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","offset","dt","times","utc","d3_time_interval_utc","year","day","years","days","dayOfYear","interval","week","sunday","weeks","weekOfYear","sundayOfYear","d3_time_formatPads","-","0","d3_time_numberRe","d3_time_percentRe","d3_time_formatPad","fill","width","sign","string","d3_time_formatRe","names","d3_time_formatLookup","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberSunday","U","d3_time_parseWeekNumberMonday","W","d3_time_parseFullYear","d3_time_parseYear","d3_time_expandYear","d3_time_parseZone","Z","d3_time_parseMonthNumber","d3_time_parseDay","d3_time_parseDayOfYear","d3_time_parseHour24","d3_time_parseMinutes","M","d3_time_parseSeconds","d3_time_parseMilliseconds","L","d3_time_zone","zs","zh","zm","d3_time_parseLiteralPercent","d3_time_formatMulti","formats","locale","numberFormat","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","specifier","align","zfill","comma","suffix","integer","exponent","zcomma","fullSuffix","negative","unit","after","lastIndexOf","d3_locale_numberFormat","timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","d3_time_formats","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_periodLookup","d3_time_dayRe","d3_time_dayLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","A","B","mondayOfYear","Y","%","d3_locale_timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","lines","rejoin","d3_geo_clipAntimeridian","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","C","ρ0","forward","ρ0_y","clipExtent","output","valid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBufferCircle","radius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","path","context","projectStream","contextStream","cacheStream","pointRadius","d3_geo_pathProjectStream","pointCircle","pointLineStart","lineEndPolygon","moveTo","lineTo","closePath","transform","methods","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_interpolate","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","F","d3_geo_mercator","d3_geo_conicEquidistant","G","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiCreateBeach","site","beach","d3_geom_voronoiRedBlackNode","edge","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","P","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","root","visit","d3_geom_quadtreeVisit","sx","sy","children","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","ease","d3_ease_clamp","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","as","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","pie","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","default","silhouette","wiggle","s2","s3","o0","expand","zero","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","span","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","json","responseXML","undefined","base1","base2","base3","Epoch","Chart","Time","Util","Formats","warn","msg","console","exception","TestContext","VOID_METHODS","len","_log","_makeFauxMethod","arg","results","getImageData","height","resolution","ref","typeFunction","d3Seconds","hasProp","objectName","isObject","isString","isFunction","isNumber","isElement","HTMLElement","nodeName","isNonEmptyArray","original","defaults","options","bothAreObjects","def","opt","formatSI","fixIntegers","ref1","formatBytes","fix_integers","dasherize","str","layers","len1","element","pseudoElement","currentStyle","toRGBA","opacity","parts","getContext","Events","_events","onAll","offAll","mapOrList","results1","trigger","fn","flatten","multiarray","item","regular","si","percent","bytes","QueryCSS","extend","constructor","__super__","Base","superClass","optionListeners","options1","model","hasData","setData","getData","dataFormat","_this","setDataFromModel","el","option:width","option:height","layer:shown","layer:hidden","_getAllOptions","_getOption","scope","_setOption","subkey","_setManyOptions","option","prepared","_prepareData","_annotateLayers","draw","rawData","_formatData","Data","formatData","category","classes","layer","className","_findLayer","labelOrIndex","showLayer","hideLayer","toggleLayer","isLayerVisible","getVisibleLayers","_getScaleDomain","givenDomain","maxFn","minFn","memo","curr","cmp","dimensionsChanged","layerChanged","SVG","Canvas","pixelRatio","devicePixelRatio","canvas","getWidth","getHeight","ctx","clearRect","getStyles","purge","PUT_EXPR","containerCount","logging","nextContainerId","put","classNames","tag","substr","cache","styleList","getContainer","hash","containerId","cacheKey","len2","parents","ref2","sel","selectorList","styles","subSelector","applyLayerLabel","Format","autoLabels","keyLabels","labels","buildLayers","defaultOptions","formatBasicPlot","formatHeatmap","formatPie","formatTimePlot","startTime","mapFn","tuple","keyvalue","rangeName","formatFn","formatter","opts","formatEntry","Model","loading","getNext","Plot","defaultAxisMargins","pos","margins","hasAxis","tickFormats","option:margins.top","option:margins.right","option:margins.bottom","option:margins.left","option:axes","option:ticks.top","option:ticks.right","option:ticks.bottom","option:ticks.left","option:tickFormats.top","option:tickFormats.right","option:tickFormats.bottom","option:tickFormats.left","option:domain","option:range","setTickFormat","innerWidth","innerHeight","bottomAxis","topAxis","leftAxis","rightAxis","_axesDrawn","_redrawAxes","_drawAxes","marginsChanged","axesChanged","ticksChanged","tickFormatsChanged","domainChanged","rangeChanged","Area","Bar","horizontal_defaults","horizontal_specific","_isHorizontal","orientation","bar","option:orientation","option:padding","option:outerPadding","option:padding:bar","option:padding:group","option:outerPadding:bar","option:outerPadding:group","_isVertical","_remapData","_drawVertical","_drawHorizontal","rects","_getTickValues","numTicks","dataKey","total","orientationChanged","paddingChanged","Histogram","bucketRange","buckets","cutOutliers","option:bucketRange","option:buckets","option:cutOutliers","bucketSize","preparedLayer","resetData","bucketRangeChanged","bucketsChanged","cutOutliersChanged","Line","Pie","inner","_current","marginChanged","innerChanged","Scatter","dots","radiusChanged","pushFromModel","_queue","z-index","_sizeCanvas","animation","delta","tickDelta","frame","_buildAxes","animationCallback","_animate","historySize","windowSize","option:margins","option:ticks","option:tickFormats","_prepareTimeAxes","_prepareRangeAxes","_offsetX","_resetInitialTimeTicks","tickInterval","_ticks","_tickTimer","_pushTick","ySvgLeft","ySvgRight","_prepareEntry","_prepareLayers","_startTransition","_shift","setInterval","_stopTransition","firstTick","lastTick","inTransition","_shiftTick","clearInterval","_updateTicks","_transitionRangeAxes","_updateTimeAxes","ySvg","newTime","bucket","bottomEl","topEl","dop","Stack","_stackLayers","setStyles","fillStyle","stroke","strokeStyle","lineWidth","_drawAreas","borderX","trans","beginPath","_drawStrokes","ey0","iBoundry","ref3","fillRect","strokeRect","Gauge","textX","textY","tickOffset","option:tickSize","option:tickOffset","option:format","centerX","centerY","getAngle","drawNeedle","save","restore","tickSizeChanged","tickOffsetChanged","formatChanged","Heatmap","colorFunctions","_setOpacityFunction","_setupPaintCanvas","bucketPadding","paintZeroValues","quadratic","quartic","quintic","option:opacity","option:bucketPadding","option:paintZeroValues","_opacityFn","_getBuckets","paintWidth","paintHeight","paint","drawColumn","entryIndex","_paintEntry","_computeColor","bucketTotals","maxTotal","xPos","_avgLab","_shiftPaintCanvas","putImageData","drawImage","opacityChanged","bucketPaddingChanged","paintZeroValuesChanged","jQueryModule","MooToolsModule","zeptoModule","_typeMap","scatter","time.area","time.bar","time.line","time.gauge","time.heatmap","chart","klass","jQuery","implement","$$","retrieve","store","MooTools","chartId","chartMap","next_cid","DATA_NAME","cid","Zepto"],"mappings":"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","file":"renderer_packed.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","require(\"d3\");\nrequire(\"epoch-charting\");\n\nconst dataSets = new Array(numPlots);\nconst charts = new Array(numPlots);\n\nfor (var i=0, now=new Date().getTime(); i<numPlots; i++) {\n  dataSets[i] = [{\n    label: 'Series ' + i,\n    values: [{time: now, y: 0.0}]\n  }];\n\n  charts[i] = $('#line' + i).epoch({\n    type: 'time.line',\n    data: dataSets[i],\n    axes: ['left', 'bottom'],\n    fps: 60,\n    queueSize: 1,\n    range: [0, 4095]\n  });\n}\n\nrenderPlots = function() {\n  for (var i=0; i<numPlots; i++) {\n    charts[i].push( [{\n      time: new Date().getTime(),\n      y: pointsArr[i]\n    }] );\n  }\n};\n","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();","var base, base1, base2, base3;\n\nif (window.Epoch == null) {\n  window.Epoch = {};\n}\n\nif ((base = window.Epoch).Chart == null) {\n  base.Chart = {};\n}\n\nif ((base1 = window.Epoch).Time == null) {\n  base1.Time = {};\n}\n\nif ((base2 = window.Epoch).Util == null) {\n  base2.Util = {};\n}\n\nif ((base3 = window.Epoch).Formats == null) {\n  base3.Formats = {};\n}\n\nEpoch.warn = function(msg) {\n  return (console.warn || console.log)(\"Epoch Warning: \" + msg);\n};\n\nEpoch.exception = function(msg) {\n  throw \"Epoch Error: \" + msg;\n};\n\nEpoch.TestContext = (function() {\n  var VOID_METHODS;\n\n  VOID_METHODS = ['arc', 'arcTo', 'beginPath', 'bezierCurveTo', 'clearRect', 'clip', 'closePath', 'drawImage', 'fill', 'fillRect', 'fillText', 'moveTo', 'quadraticCurveTo', 'rect', 'restore', 'rotate', 'save', 'scale', 'scrollPathIntoView', 'setLineDash', 'setTransform', 'stroke', 'strokeRect', 'strokeText', 'transform', 'translate', 'lineTo'];\n\n  function TestContext() {\n    var i, len, method;\n    this._log = [];\n    for (i = 0, len = VOID_METHODS.length; i < len; i++) {\n      method = VOID_METHODS[i];\n      this._makeFauxMethod(method);\n    }\n  }\n\n  TestContext.prototype._makeFauxMethod = function(name) {\n    return this[name] = function() {\n      var arg;\n      return this._log.push(name + \"(\" + (((function() {\n        var i, len, results;\n        results = [];\n        for (i = 0, len = arguments.length; i < len; i++) {\n          arg = arguments[i];\n          results.push(arg.toString());\n        }\n        return results;\n      }).apply(this, arguments)).join(',')) + \")\");\n    };\n  };\n\n  TestContext.prototype.getImageData = function() {\n    var arg;\n    this._log.push(\"getImageData(\" + (((function() {\n      var i, len, results;\n      results = [];\n      for (i = 0, len = arguments.length; i < len; i++) {\n        arg = arguments[i];\n        results.push(arg.toString());\n      }\n      return results;\n    }).apply(this, arguments)).join(',')) + \")\");\n    return {\n      width: 0,\n      height: 0,\n      resolution: 1.0,\n      data: []\n    };\n  };\n\n  return TestContext;\n\n})();\n\nvar ref, typeFunction,\n  hasProp = {}.hasOwnProperty;\n\ntypeFunction = function(objectName) {\n  return function(v) {\n    return Object.prototype.toString.call(v) === (\"[object \" + objectName + \"]\");\n  };\n};\n\nEpoch.isArray = (ref = Array.isArray) != null ? ref : typeFunction('Array');\n\nEpoch.isObject = typeFunction('Object');\n\nEpoch.isString = typeFunction('String');\n\nEpoch.isFunction = typeFunction('Function');\n\nEpoch.isNumber = typeFunction('Number');\n\nEpoch.isElement = function(v) {\n  if (typeof HTMLElement !== \"undefined\" && HTMLElement !== null) {\n    return v instanceof HTMLElement;\n  } else {\n    return (v != null) && Epoch.isObject(v) && v.nodeType === 1 && Epoch.isString(v.nodeName);\n  }\n};\n\nEpoch.isNonEmptyArray = function(v) {\n  return Epoch.isArray(v) && v.length > 0;\n};\n\nEpoch.Util.copy = function(original) {\n  var copy, k, v;\n  if (original == null) {\n    return null;\n  }\n  copy = {};\n  for (k in original) {\n    if (!hasProp.call(original, k)) continue;\n    v = original[k];\n    copy[k] = v;\n  }\n  return copy;\n};\n\nEpoch.Util.defaults = function(options, defaults) {\n  var bothAreObjects, def, k, opt, result, v;\n  result = Epoch.Util.copy(options);\n  for (k in defaults) {\n    if (!hasProp.call(defaults, k)) continue;\n    v = defaults[k];\n    opt = options[k];\n    def = defaults[k];\n    bothAreObjects = Epoch.isObject(opt) && Epoch.isObject(def);\n    if ((opt != null) && (def != null)) {\n      if (bothAreObjects && !Epoch.isArray(opt)) {\n        result[k] = Epoch.Util.defaults(opt, def);\n      } else {\n        result[k] = opt;\n      }\n    } else if (opt != null) {\n      result[k] = opt;\n    } else {\n      result[k] = def;\n    }\n  }\n  return result;\n};\n\nEpoch.Util.formatSI = function(v, fixed, fixIntegers) {\n  var base, i, label, q, ref1;\n  if (fixed == null) {\n    fixed = 1;\n  }\n  if (fixIntegers == null) {\n    fixIntegers = false;\n  }\n  if (v < 1000) {\n    q = v;\n    if (!((q | 0) === q && !fixIntegers)) {\n      q = q.toFixed(fixed);\n    }\n    return q;\n  }\n  ref1 = ['K', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'];\n  for (i in ref1) {\n    if (!hasProp.call(ref1, i)) continue;\n    label = ref1[i];\n    base = Math.pow(10, ((i | 0) + 1) * 3);\n    if (v >= base && v < Math.pow(10, ((i | 0) + 2) * 3)) {\n      q = v / base;\n      if (!((q % 1) === 0 && !fixIntegers)) {\n        q = q.toFixed(fixed);\n      }\n      return q + \" \" + label;\n    }\n  }\n};\n\nEpoch.Util.formatBytes = function(v, fixed, fix_integers) {\n  var base, i, label, q, ref1;\n  if (fixed == null) {\n    fixed = 1;\n  }\n  if (fix_integers == null) {\n    fix_integers = false;\n  }\n  if (v < 1024) {\n    q = v;\n    if (!((q % 1) === 0 && !fix_integers)) {\n      q = q.toFixed(fixed);\n    }\n    return q + \" B\";\n  }\n  ref1 = ['KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  for (i in ref1) {\n    if (!hasProp.call(ref1, i)) continue;\n    label = ref1[i];\n    base = Math.pow(1024, (i | 0) + 1);\n    if (v >= base && v < Math.pow(1024, (i | 0) + 2)) {\n      q = v / base;\n      if (!((q % 1) === 0 && !fix_integers)) {\n        q = q.toFixed(fixed);\n      }\n      return q + \" \" + label;\n    }\n  }\n};\n\nEpoch.Util.dasherize = function(str) {\n  return Epoch.Util.trim(str).replace(\"\\n\", '').replace(/\\s+/g, '-').toLowerCase();\n};\n\nEpoch.Util.domain = function(layers, key) {\n  var domain, entry, j, l, layer, len, len1, ref1, set;\n  if (key == null) {\n    key = 'x';\n  }\n  set = {};\n  domain = [];\n  for (j = 0, len = layers.length; j < len; j++) {\n    layer = layers[j];\n    ref1 = layer.values;\n    for (l = 0, len1 = ref1.length; l < len1; l++) {\n      entry = ref1[l];\n      if (set[entry[key]] != null) {\n        continue;\n      }\n      domain.push(entry[key]);\n      set[entry[key]] = true;\n    }\n  }\n  return domain;\n};\n\nEpoch.Util.trim = function(string) {\n  if (!Epoch.isString(string)) {\n    return null;\n  }\n  return string.replace(/^\\s+/g, '').replace(/\\s+$/g, '');\n};\n\nEpoch.Util.getComputedStyle = function(element, pseudoElement) {\n  if (Epoch.isFunction(window.getComputedStyle)) {\n    return window.getComputedStyle(element, pseudoElement);\n  } else if (element.currentStyle != null) {\n    return element.currentStyle;\n  }\n};\n\nEpoch.Util.toRGBA = function(color, opacity) {\n  var all, b, g, parts, r, result, v;\n  if ((parts = color.match(/^rgba\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*[0-9\\.]+\\)/))) {\n    all = parts[0], r = parts[1], g = parts[2], b = parts[3];\n    result = \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + opacity + \")\";\n  } else if ((v = d3.rgb(color))) {\n    result = \"rgba(\" + v.r + \",\" + v.g + \",\" + v.b + \",\" + opacity + \")\";\n  }\n  return result;\n};\n\nEpoch.Util.getContext = function(node, type) {\n  if (type == null) {\n    type = '2d';\n  }\n  return node.getContext(type);\n};\n\nEpoch.Events = (function() {\n  function Events() {\n    this._events = {};\n  }\n\n  Events.prototype.on = function(name, callback) {\n    var base1;\n    if (callback == null) {\n      return;\n    }\n    if ((base1 = this._events)[name] == null) {\n      base1[name] = [];\n    }\n    return this._events[name].push(callback);\n  };\n\n  Events.prototype.onAll = function(map) {\n    var callback, name, results;\n    if (!Epoch.isObject(map)) {\n      return;\n    }\n    results = [];\n    for (name in map) {\n      if (!hasProp.call(map, name)) continue;\n      callback = map[name];\n      results.push(this.on(name, callback));\n    }\n    return results;\n  };\n\n  Events.prototype.off = function(name, callback) {\n    var i, results;\n    if (!Epoch.isArray(this._events[name])) {\n      return;\n    }\n    if (callback == null) {\n      return delete this._events[name];\n    }\n    results = [];\n    while ((i = this._events[name].indexOf(callback)) >= 0) {\n      results.push(this._events[name].splice(i, 1));\n    }\n    return results;\n  };\n\n  Events.prototype.offAll = function(mapOrList) {\n    var callback, j, len, name, results, results1;\n    if (Epoch.isArray(mapOrList)) {\n      results = [];\n      for (j = 0, len = mapOrList.length; j < len; j++) {\n        name = mapOrList[j];\n        results.push(this.off(name));\n      }\n      return results;\n    } else if (Epoch.isObject(mapOrList)) {\n      results1 = [];\n      for (name in mapOrList) {\n        if (!hasProp.call(mapOrList, name)) continue;\n        callback = mapOrList[name];\n        results1.push(this.off(name, callback));\n      }\n      return results1;\n    }\n  };\n\n  Events.prototype.trigger = function(name) {\n    var args, callback, fn, i, j, len, ref1, results;\n    if (this._events[name] == null) {\n      return;\n    }\n    args = (function() {\n      var j, ref1, results;\n      results = [];\n      for (i = j = 1, ref1 = arguments.length; 1 <= ref1 ? j < ref1 : j > ref1; i = 1 <= ref1 ? ++j : --j) {\n        results.push(arguments[i]);\n      }\n      return results;\n    }).apply(this, arguments);\n    ref1 = this._events[name];\n    results = [];\n    for (j = 0, len = ref1.length; j < len; j++) {\n      callback = ref1[j];\n      fn = null;\n      if (Epoch.isString(callback)) {\n        fn = this[callback];\n      } else if (Epoch.isFunction(callback)) {\n        fn = callback;\n      }\n      if (fn == null) {\n        Epoch.exception(\"Callback for event '\" + name + \"' is not a function or reference to a method.\");\n      }\n      results.push(fn.apply(this, args));\n    }\n    return results;\n  };\n\n  return Events;\n\n})();\n\nEpoch.Util.flatten = function(multiarray) {\n  var array, item, j, l, len, len1, result;\n  if (!Array.isArray(multiarray)) {\n    throw new Error('Epoch.Util.flatten only accepts arrays');\n  }\n  result = [];\n  for (j = 0, len = multiarray.length; j < len; j++) {\n    array = multiarray[j];\n    if (Array.isArray(array)) {\n      for (l = 0, len1 = array.length; l < len1; l++) {\n        item = array[l];\n        result.push(item);\n      }\n    } else {\n      result.push(array);\n    }\n  }\n  return result;\n};\n\nd3.selection.prototype.width = function(value) {\n  if ((value != null) && Epoch.isString(value)) {\n    return this.style('width', value);\n  } else if ((value != null) && Epoch.isNumber(value)) {\n    return this.style('width', value + \"px\");\n  } else {\n    return +Epoch.Util.getComputedStyle(this.node(), null).width.replace('px', '');\n  }\n};\n\nd3.selection.prototype.height = function(value) {\n  if ((value != null) && Epoch.isString(value)) {\n    return this.style('height', value);\n  } else if ((value != null) && Epoch.isNumber(value)) {\n    return this.style('height', value + \"px\");\n  } else {\n    return +Epoch.Util.getComputedStyle(this.node(), null).height.replace('px', '');\n  }\n};\n\nvar d3Seconds;\n\nEpoch.Formats.regular = function(d) {\n  return d;\n};\n\nEpoch.Formats.si = function(d) {\n  return Epoch.Util.formatSI(d);\n};\n\nEpoch.Formats.percent = function(d) {\n  return (d * 100).toFixed(1) + \"%\";\n};\n\nEpoch.Formats.seconds = function(t) {\n  return d3Seconds(new Date(t * 1000));\n};\n\nd3Seconds = d3.time.format('%I:%M:%S %p');\n\nEpoch.Formats.bytes = function(d) {\n  return Epoch.Util.formatBytes(d);\n};\n\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nEpoch.Chart.Base = (function(superClass) {\n  var defaults, optionListeners;\n\n  extend(Base, superClass);\n\n  defaults = {\n    width: 320,\n    height: 240,\n    dataFormat: null\n  };\n\n  optionListeners = {\n    'option:width': 'dimensionsChanged',\n    'option:height': 'dimensionsChanged',\n    'layer:shown': 'layerChanged',\n    'layer:hidden': 'layerChanged'\n  };\n\n  function Base(options1) {\n    this.options = options1 != null ? options1 : {};\n    Base.__super__.constructor.call(this);\n    if (this.options.model) {\n      if (this.options.model.hasData() != null) {\n        this.setData(this.options.model.getData(this.options.type, this.options.dataFormat));\n      } else {\n        this.setData(this.options.data || []);\n      }\n      this.options.model.on('data:updated', (function(_this) {\n        return function() {\n          return _this.setDataFromModel();\n        };\n      })(this));\n    } else {\n      this.setData(this.options.data || []);\n    }\n    if (this.options.el != null) {\n      this.el = d3.select(this.options.el);\n    }\n    this.width = this.options.width;\n    this.height = this.options.height;\n    if (this.el != null) {\n      if (this.width == null) {\n        this.width = this.el.width();\n      }\n      if (this.height == null) {\n        this.height = this.el.height();\n      }\n    } else {\n      if (this.width == null) {\n        this.width = defaults.width;\n      }\n      if (this.height == null) {\n        this.height = defaults.height;\n      }\n      this.el = d3.select(document.createElement('DIV')).attr('width', this.width).attr('height', this.height);\n    }\n    this.onAll(optionListeners);\n  }\n\n  Base.prototype._getAllOptions = function() {\n    return Epoch.Util.defaults({}, this.options);\n  };\n\n  Base.prototype._getOption = function(key) {\n    var parts, scope, subkey;\n    parts = key.split('.');\n    scope = this.options;\n    while (parts.length && (scope != null)) {\n      subkey = parts.shift();\n      scope = scope[subkey];\n    }\n    return scope;\n  };\n\n  Base.prototype._setOption = function(key, value) {\n    var parts, scope, subkey;\n    parts = key.split('.');\n    scope = this.options;\n    while (parts.length) {\n      subkey = parts.shift();\n      if (parts.length === 0) {\n        scope[subkey] = arguments[1];\n        this.trigger(\"option:\" + arguments[0]);\n        return;\n      }\n      if (scope[subkey] == null) {\n        scope[subkey] = {};\n      }\n      scope = scope[subkey];\n    }\n  };\n\n  Base.prototype._setManyOptions = function(options, prefix) {\n    var key, results, value;\n    if (prefix == null) {\n      prefix = '';\n    }\n    results = [];\n    for (key in options) {\n      if (!hasProp.call(options, key)) continue;\n      value = options[key];\n      if (Epoch.isObject(value)) {\n        results.push(this._setManyOptions(value, (prefix + key) + \".\"));\n      } else {\n        results.push(this._setOption(prefix + key, value));\n      }\n    }\n    return results;\n  };\n\n  Base.prototype.option = function() {\n    if (arguments.length === 0) {\n      return this._getAllOptions();\n    } else if (arguments.length === 1 && Epoch.isString(arguments[0])) {\n      return this._getOption(arguments[0]);\n    } else if (arguments.length === 2 && Epoch.isString(arguments[0])) {\n      return this._setOption(arguments[0], arguments[1]);\n    } else if (arguments.length === 1 && Epoch.isObject(arguments[0])) {\n      return this._setManyOptions(arguments[0]);\n    }\n  };\n\n  Base.prototype.setDataFromModel = function() {\n    var prepared;\n    prepared = this._prepareData(this.options.model.getData(this.options.type, this.options.dataFormat));\n    this.data = this._annotateLayers(prepared);\n    return this.draw();\n  };\n\n  Base.prototype.setData = function(data, options) {\n    var prepared;\n    if (options == null) {\n      options = {};\n    }\n    prepared = this._prepareData((this.rawData = this._formatData(data)));\n    return this.data = this._annotateLayers(prepared);\n  };\n\n  Base.prototype._prepareData = function(data) {\n    return data;\n  };\n\n  Base.prototype._formatData = function(data) {\n    return Epoch.Data.formatData(data, this.options.type, this.options.dataFormat);\n  };\n\n  Base.prototype._annotateLayers = function(data) {\n    var category, classes, i, layer, len;\n    category = 1;\n    for (i = 0, len = data.length; i < len; i++) {\n      layer = data[i];\n      classes = ['layer'];\n      classes.push(\"category\" + category);\n      layer.category = category;\n      layer.visible = true;\n      if (layer.label != null) {\n        classes.push(Epoch.Util.dasherize(layer.label));\n      }\n      layer.className = classes.join(' ');\n      category++;\n    }\n    return data;\n  };\n\n  Base.prototype._findLayer = function(labelOrIndex) {\n    var i, index, l, layer, len, ref;\n    layer = null;\n    if (Epoch.isString(labelOrIndex)) {\n      ref = this.data;\n      for (i = 0, len = ref.length; i < len; i++) {\n        l = ref[i];\n        if (l.label === labelOrIndex) {\n          layer = l;\n          break;\n        }\n      }\n    } else if (Epoch.isNumber(labelOrIndex)) {\n      index = parseInt(labelOrIndex);\n      if (!(index < 0 || index >= this.data.length)) {\n        layer = this.data[index];\n      }\n    }\n    return layer;\n  };\n\n  Base.prototype.showLayer = function(labelOrIndex) {\n    var layer;\n    if (!(layer = this._findLayer(labelOrIndex))) {\n      return;\n    }\n    if (layer.visible) {\n      return;\n    }\n    layer.visible = true;\n    return this.trigger('layer:shown');\n  };\n\n  Base.prototype.hideLayer = function(labelOrIndex) {\n    var layer;\n    if (!(layer = this._findLayer(labelOrIndex))) {\n      return;\n    }\n    if (!layer.visible) {\n      return;\n    }\n    layer.visible = false;\n    return this.trigger('layer:hidden');\n  };\n\n  Base.prototype.toggleLayer = function(labelOrIndex) {\n    var layer;\n    if (!(layer = this._findLayer(labelOrIndex))) {\n      return;\n    }\n    layer.visible = !layer.visible;\n    if (layer.visible) {\n      return this.trigger('layer:shown');\n    } else {\n      return this.trigger('layer:hidden');\n    }\n  };\n\n  Base.prototype.isLayerVisible = function(labelOrIndex) {\n    var layer;\n    if (!(layer = this._findLayer(labelOrIndex))) {\n      return null;\n    }\n    return layer.visible;\n  };\n\n  Base.prototype.getVisibleLayers = function() {\n    return this.data.filter(function(layer) {\n      return layer.visible;\n    });\n  };\n\n  Base.prototype.update = function(data, draw) {\n    if (draw == null) {\n      draw = true;\n    }\n    this.setData(data);\n    if (draw) {\n      return this.draw();\n    }\n  };\n\n  Base.prototype.draw = function() {\n    return this.trigger('draw');\n  };\n\n  Base.prototype._getScaleDomain = function(givenDomain) {\n    var layers, maxFn, minFn, values;\n    if (Array.isArray(givenDomain)) {\n      return givenDomain;\n    }\n    if (Epoch.isString(givenDomain)) {\n      layers = this.getVisibleLayers().filter(function(l) {\n        return l.range === givenDomain;\n      }).map(function(l) {\n        return l.values;\n      });\n      if ((layers != null) && layers.length) {\n        values = Epoch.Util.flatten(layers).map(function(d) {\n          return d.y;\n        });\n        minFn = function(memo, curr) {\n          if (curr < memo) {\n            return curr;\n          } else {\n            return memo;\n          }\n        };\n        maxFn = function(memo, curr) {\n          if (curr > memo) {\n            return curr;\n          } else {\n            return memo;\n          }\n        };\n        return [values.reduce(minFn, values[0]), values.reduce(maxFn, values[0])];\n      }\n    }\n    if (Array.isArray(this.options.range)) {\n      return this.options.range;\n    } else if (this.options.range && Array.isArray(this.options.range.left)) {\n      return this.options.range.left;\n    } else if (this.options.range && Array.isArray(this.options.range.right)) {\n      return this.options.range.right;\n    } else {\n      return this.extent(function(d) {\n        return d.y;\n      });\n    }\n  };\n\n  Base.prototype.extent = function(cmp) {\n    return [\n      d3.min(this.getVisibleLayers(), function(layer) {\n        return d3.min(layer.values, cmp);\n      }), d3.max(this.getVisibleLayers(), function(layer) {\n        return d3.max(layer.values, cmp);\n      })\n    ];\n  };\n\n  Base.prototype.dimensionsChanged = function() {\n    this.width = this.option('width') || this.width;\n    this.height = this.option('height') || this.height;\n    this.el.width(this.width);\n    return this.el.height(this.height);\n  };\n\n  Base.prototype.layerChanged = function() {\n    return this.draw();\n  };\n\n  return Base;\n\n})(Epoch.Events);\n\nEpoch.Chart.SVG = (function(superClass) {\n  extend(SVG, superClass);\n\n  function SVG(options1) {\n    this.options = options1 != null ? options1 : {};\n    SVG.__super__.constructor.call(this, this.options);\n    if (this.el != null) {\n      this.svg = this.el.append('svg');\n    } else {\n      this.svg = d3.select(document.createElement('svg'));\n    }\n    this.svg.attr({\n      xmlns: 'http://www.w3.org/2000/svg',\n      width: this.width,\n      height: this.height\n    });\n  }\n\n  SVG.prototype.dimensionsChanged = function() {\n    SVG.__super__.dimensionsChanged.call(this);\n    return this.svg.attr('width', this.width).attr('height', this.height);\n  };\n\n  return SVG;\n\n})(Epoch.Chart.Base);\n\nEpoch.Chart.Canvas = (function(superClass) {\n  extend(Canvas, superClass);\n\n  function Canvas(options1) {\n    this.options = options1 != null ? options1 : {};\n    Canvas.__super__.constructor.call(this, this.options);\n    if (this.options.pixelRatio != null) {\n      this.pixelRatio = this.options.pixelRatio;\n    } else if (window.devicePixelRatio != null) {\n      this.pixelRatio = window.devicePixelRatio;\n    } else {\n      this.pixelRatio = 1;\n    }\n    this.canvas = d3.select(document.createElement('CANVAS'));\n    this.canvas.style({\n      'width': this.width + \"px\",\n      'height': this.height + \"px\"\n    });\n    this.canvas.attr({\n      width: this.getWidth(),\n      height: this.getHeight()\n    });\n    if (this.el != null) {\n      this.el.node().appendChild(this.canvas.node());\n    }\n    this.ctx = Epoch.Util.getContext(this.canvas.node());\n  }\n\n  Canvas.prototype.getWidth = function() {\n    return this.width * this.pixelRatio;\n  };\n\n  Canvas.prototype.getHeight = function() {\n    return this.height * this.pixelRatio;\n  };\n\n  Canvas.prototype.clear = function() {\n    return this.ctx.clearRect(0, 0, this.getWidth(), this.getHeight());\n  };\n\n  Canvas.prototype.getStyles = function(selector) {\n    return Epoch.QueryCSS.getStyles(selector, this.el);\n  };\n\n  Canvas.prototype.dimensionsChanged = function() {\n    Canvas.__super__.dimensionsChanged.call(this);\n    this.canvas.style({\n      'width': this.width + \"px\",\n      'height': this.height + \"px\"\n    });\n    return this.canvas.attr({\n      width: this.getWidth(),\n      height: this.getHeight()\n    });\n  };\n\n  Canvas.prototype.redraw = function() {\n    Epoch.QueryCSS.purge();\n    return this.draw();\n  };\n\n  return Canvas;\n\n})(Epoch.Chart.Base);\n\nvar QueryCSS;\n\nQueryCSS = (function() {\n  var CONTAINER_HASH_ATTR, PUT_EXPR, REFERENCE_CONTAINER_ID, containerCount, logging, nextContainerId, put;\n\n  function QueryCSS() {}\n\n  REFERENCE_CONTAINER_ID = '_canvas_css_reference';\n\n  CONTAINER_HASH_ATTR = 'data-epoch-container-id';\n\n  containerCount = 0;\n\n  nextContainerId = function() {\n    return \"epoch-container-\" + (containerCount++);\n  };\n\n  PUT_EXPR = /^([^#. ]+)?(#[^. ]+)?(\\.[^# ]+)?$/;\n\n  logging = false;\n\n  put = function(selector) {\n    var classNames, element, id, match, tag, whole;\n    match = selector.match(PUT_EXPR);\n    if (match == null) {\n      return Epoch.error('Query CSS cannot match given selector: ' + selector);\n    }\n    whole = match[0], tag = match[1], id = match[2], classNames = match[3];\n    tag = (tag != null ? tag : 'div').toUpperCase();\n    element = document.createElement(tag);\n    if (id != null) {\n      element.id = id.substr(1);\n    }\n    if (classNames != null) {\n      element.className = classNames.substr(1).replace(/\\./g, ' ');\n    }\n    return element;\n  };\n\n  QueryCSS.log = function(b) {\n    return logging = b;\n  };\n\n  QueryCSS.cache = {};\n\n  QueryCSS.styleList = ['fill', 'stroke', 'stroke-width'];\n\n  QueryCSS.container = null;\n\n  QueryCSS.purge = function() {\n    return QueryCSS.cache = {};\n  };\n\n  QueryCSS.getContainer = function() {\n    var container;\n    if (QueryCSS.container != null) {\n      return QueryCSS.container;\n    }\n    container = document.createElement('DIV');\n    container.id = REFERENCE_CONTAINER_ID;\n    document.body.appendChild(container);\n    return QueryCSS.container = d3.select(container);\n  };\n\n  QueryCSS.hash = function(selector, container) {\n    var containerId;\n    containerId = container.attr(CONTAINER_HASH_ATTR);\n    if (containerId == null) {\n      containerId = nextContainerId();\n      container.attr(CONTAINER_HASH_ATTR, containerId);\n    }\n    return containerId + \"__\" + selector;\n  };\n\n  QueryCSS.getStyles = function(selector, container) {\n    var cache, cacheKey, el, element, i, j, k, len, len1, len2, name, parent, parentNode, parents, ref, ref1, ref2, root, sel, selectorList, styles, subSelector;\n    cacheKey = QueryCSS.hash(selector, container);\n    cache = QueryCSS.cache[cacheKey];\n    if (cache != null) {\n      return cache;\n    }\n    parents = [];\n    parentNode = container.node().parentNode;\n    while ((parentNode != null) && parentNode.nodeName.toLowerCase() !== 'body') {\n      parents.unshift(parentNode);\n      parentNode = parentNode.parentNode;\n    }\n    parents.push(container.node());\n    selectorList = [];\n    for (i = 0, len = parents.length; i < len; i++) {\n      element = parents[i];\n      sel = element.nodeName.toLowerCase();\n      if ((element.id != null) && element.id.length > 0) {\n        sel += '#' + element.id;\n      }\n      if ((element.className != null) && element.className.length > 0) {\n        sel += '.' + Epoch.Util.trim(element.className).replace(/\\s+/g, '.');\n      }\n      selectorList.push(sel);\n    }\n    selectorList.push('svg');\n    ref1 = Epoch.Util.trim(selector).split(/\\s+/);\n    for (j = 0, len1 = ref1.length; j < len1; j++) {\n      subSelector = ref1[j];\n      selectorList.push(subSelector);\n    }\n    if (logging) {\n      console.log(selectorList);\n    }\n    parent = root = put(selectorList.shift());\n    while (selectorList.length) {\n      el = put(selectorList.shift());\n      parent.appendChild(el);\n      parent = el;\n    }\n    if (logging) {\n      console.log(root);\n    }\n    QueryCSS.getContainer().node().appendChild(root);\n    ref = d3.select('#' + REFERENCE_CONTAINER_ID + ' ' + selector);\n    styles = {};\n    ref2 = QueryCSS.styleList;\n    for (k = 0, len2 = ref2.length; k < len2; k++) {\n      name = ref2[k];\n      styles[name] = ref.style(name);\n    }\n    QueryCSS.cache[cacheKey] = styles;\n    QueryCSS.getContainer().html('');\n    return styles;\n  };\n\n  return QueryCSS;\n\n})();\n\nEpoch.QueryCSS = QueryCSS;\n\nvar applyLayerLabel, base,\n  hasProp = {}.hasOwnProperty,\n  slice = [].slice;\n\nif (Epoch.Data == null) {\n  Epoch.Data = {};\n}\n\nif ((base = Epoch.Data).Format == null) {\n  base.Format = {};\n}\n\napplyLayerLabel = function(layer, options, i, keys) {\n  var autoLabels, keyLabels, label, labels, ref;\n  if (keys == null) {\n    keys = [];\n  }\n  ref = [options.labels, options.autoLabels, options.keyLabels], labels = ref[0], autoLabels = ref[1], keyLabels = ref[2];\n  if ((labels != null) && Epoch.isArray(labels) && labels.length > i) {\n    layer.label = labels[i];\n  } else if (keyLabels && keys.length > i) {\n    layer.label = keys[i];\n  } else if (autoLabels) {\n    label = [];\n    while (i >= 0) {\n      label.push(String.fromCharCode(65 + (i % 26)));\n      i -= 26;\n    }\n    layer.label = label.join('');\n  }\n  return layer;\n};\n\nEpoch.Data.Format.array = (function() {\n  var buildLayers, defaultOptions, format, formatBasicPlot, formatHeatmap, formatPie, formatTimePlot;\n  defaultOptions = {\n    x: function(d, i) {\n      return i;\n    },\n    y: function(d, i) {\n      return d;\n    },\n    time: function(d, i, startTime) {\n      return parseInt(startTime) + parseInt(i);\n    },\n    type: 'area',\n    autoLabels: false,\n    labels: [],\n    startTime: parseInt(new Date().getTime() / 1000)\n  };\n  buildLayers = function(data, options, mapFn) {\n    var i, result, series;\n    result = [];\n    if (Epoch.isArray(data[0])) {\n      for (i in data) {\n        if (!hasProp.call(data, i)) continue;\n        series = data[i];\n        result.push(applyLayerLabel({\n          values: series.map(mapFn)\n        }, options, parseInt(i)));\n      }\n    } else {\n      result.push(applyLayerLabel({\n        values: data.map(mapFn)\n      }, options, 0));\n    }\n    return result;\n  };\n  formatBasicPlot = function(data, options) {\n    return buildLayers(data, options, function(d, i) {\n      return {\n        x: options.x(d, i),\n        y: options.y(d, i)\n      };\n    });\n  };\n  formatTimePlot = function(data, options) {\n    return buildLayers(data, options, function(d, i) {\n      return {\n        time: options.time(d, i, options.startTime),\n        y: options.y(d, i)\n      };\n    });\n  };\n  formatHeatmap = function(data, options) {\n    return buildLayers(data, options, function(d, i) {\n      return {\n        time: options.time(d, i, options.startTime),\n        histogram: d\n      };\n    });\n  };\n  formatPie = function(data, options) {\n    var i, result, v;\n    result = [];\n    for (i in data) {\n      if (!hasProp.call(data, i)) continue;\n      v = data[i];\n      if (!Epoch.isNumber(data[0])) {\n        return [];\n      }\n      result.push(applyLayerLabel({\n        value: v\n      }, options, i));\n    }\n    return result;\n  };\n  format = function(data, options) {\n    var opt;\n    if (data == null) {\n      data = [];\n    }\n    if (options == null) {\n      options = {};\n    }\n    if (!Epoch.isNonEmptyArray(data)) {\n      return [];\n    }\n    opt = Epoch.Util.defaults(options, defaultOptions);\n    if (opt.type === 'time.heatmap') {\n      return formatHeatmap(data, opt);\n    } else if (opt.type.match(/^time\\./)) {\n      return formatTimePlot(data, opt);\n    } else if (opt.type === 'pie') {\n      return formatPie(data, opt);\n    } else {\n      return formatBasicPlot(data, opt);\n    }\n  };\n  format.entry = function(datum, options) {\n    var d, data, k, layer, len, opt, ref, results;\n    if (options == null) {\n      options = {};\n    }\n    if (options.type === 'time.gauge') {\n      if (datum == null) {\n        return 0;\n      }\n      opt = Epoch.Util.defaults(options, defaultOptions);\n      d = Epoch.isArray(datum) ? datum[0] : datum;\n      return opt.y(d, 0);\n    }\n    if (datum == null) {\n      return [];\n    }\n    if (options.startTime == null) {\n      options.startTime = parseInt(new Date().getTime() / 1000);\n    }\n    if (Epoch.isArray(datum)) {\n      data = datum.map(function(d) {\n        return [d];\n      });\n    } else {\n      data = [datum];\n    }\n    ref = format(data, options);\n    results = [];\n    for (k = 0, len = ref.length; k < len; k++) {\n      layer = ref[k];\n      results.push(layer.values[0]);\n    }\n    return results;\n  };\n  return format;\n})();\n\nEpoch.Data.Format.tuple = (function() {\n  var buildLayers, defaultOptions, format;\n  defaultOptions = {\n    x: function(d, i) {\n      return d;\n    },\n    y: function(d, i) {\n      return d;\n    },\n    time: function(d, i) {\n      return d;\n    },\n    type: 'area',\n    autoLabels: false,\n    labels: []\n  };\n  buildLayers = function(data, options, mapFn) {\n    var i, result, series;\n    if (!Epoch.isArray(data[0])) {\n      return [];\n    }\n    result = [];\n    if (Epoch.isArray(data[0][0])) {\n      for (i in data) {\n        if (!hasProp.call(data, i)) continue;\n        series = data[i];\n        result.push(applyLayerLabel({\n          values: series.map(mapFn)\n        }, options, parseInt(i)));\n      }\n    } else {\n      result.push(applyLayerLabel({\n        values: data.map(mapFn)\n      }, options, 0));\n    }\n    return result;\n  };\n  format = function(data, options) {\n    var opt;\n    if (data == null) {\n      data = [];\n    }\n    if (options == null) {\n      options = {};\n    }\n    if (!Epoch.isNonEmptyArray(data)) {\n      return [];\n    }\n    opt = Epoch.Util.defaults(options, defaultOptions);\n    if (opt.type === 'pie' || opt.type === 'time.heatmap' || opt.type === 'time.gauge') {\n      return [];\n    } else if (opt.type.match(/^time\\./)) {\n      return buildLayers(data, opt, function(d, i) {\n        return {\n          time: opt.time(d[0], parseInt(i)),\n          y: opt.y(d[1], parseInt(i))\n        };\n      });\n    } else {\n      return buildLayers(data, opt, function(d, i) {\n        return {\n          x: opt.x(d[0], parseInt(i)),\n          y: opt.y(d[1], parseInt(i))\n        };\n      });\n    }\n  };\n  format.entry = function(datum, options) {\n    var data, k, layer, len, ref, results;\n    if (options == null) {\n      options = {};\n    }\n    if (datum == null) {\n      return [];\n    }\n    if (options.startTime == null) {\n      options.startTime = parseInt(new Date().getTime() / 1000);\n    }\n    if (Epoch.isArray(datum) && Epoch.isArray(datum[0])) {\n      data = datum.map(function(d) {\n        return [d];\n      });\n    } else {\n      data = [datum];\n    }\n    ref = format(data, options);\n    results = [];\n    for (k = 0, len = ref.length; k < len; k++) {\n      layer = ref[k];\n      results.push(layer.values[0]);\n    }\n    return results;\n  };\n  return format;\n})();\n\nEpoch.Data.Format.keyvalue = (function() {\n  var buildLayers, defaultOptions, format, formatBasicPlot, formatTimePlot;\n  defaultOptions = {\n    type: 'area',\n    x: function(d, i) {\n      return parseInt(i);\n    },\n    y: function(d, i) {\n      return d;\n    },\n    time: function(d, i, startTime) {\n      return parseInt(startTime) + parseInt(i);\n    },\n    labels: [],\n    autoLabels: false,\n    keyLabels: true,\n    startTime: parseInt(new Date().getTime() / 1000)\n  };\n  buildLayers = function(data, keys, options, mapFn) {\n    var d, i, j, key, result, values;\n    result = [];\n    for (j in keys) {\n      if (!hasProp.call(keys, j)) continue;\n      key = keys[j];\n      values = [];\n      for (i in data) {\n        if (!hasProp.call(data, i)) continue;\n        d = data[i];\n        values.push(mapFn(d, key, parseInt(i)));\n      }\n      result.push(applyLayerLabel({\n        values: values\n      }, options, parseInt(j), keys));\n    }\n    return result;\n  };\n  formatBasicPlot = function(data, keys, options) {\n    return buildLayers(data, keys, options, function(d, key, i) {\n      var x;\n      if (Epoch.isString(options.x)) {\n        x = d[options.x];\n      } else {\n        x = options.x(d, parseInt(i));\n      }\n      return {\n        x: x,\n        y: options.y(d[key], parseInt(i))\n      };\n    });\n  };\n  formatTimePlot = function(data, keys, options, rangeName) {\n    if (rangeName == null) {\n      rangeName = 'y';\n    }\n    return buildLayers(data, keys, options, function(d, key, i) {\n      var value;\n      if (Epoch.isString(options.time)) {\n        value = {\n          time: d[options.time]\n        };\n      } else {\n        value = {\n          time: options.time(d, parseInt(i), options.startTime)\n        };\n      }\n      value[rangeName] = options.y(d[key], parseInt(i));\n      return value;\n    });\n  };\n  format = function(data, keys, options) {\n    var opt;\n    if (data == null) {\n      data = [];\n    }\n    if (keys == null) {\n      keys = [];\n    }\n    if (options == null) {\n      options = {};\n    }\n    if (!(Epoch.isNonEmptyArray(data) && Epoch.isNonEmptyArray(keys))) {\n      return [];\n    }\n    opt = Epoch.Util.defaults(options, defaultOptions);\n    if (opt.type === 'pie' || opt.type === 'time.gauge') {\n      return [];\n    } else if (opt.type === 'time.heatmap') {\n      return formatTimePlot(data, keys, opt, 'histogram');\n    } else if (opt.type.match(/^time\\./)) {\n      return formatTimePlot(data, keys, opt);\n    } else {\n      return formatBasicPlot(data, keys, opt);\n    }\n  };\n  format.entry = function(datum, keys, options) {\n    var k, layer, len, ref, results;\n    if (keys == null) {\n      keys = [];\n    }\n    if (options == null) {\n      options = {};\n    }\n    if (!((datum != null) && Epoch.isNonEmptyArray(keys))) {\n      return [];\n    }\n    if (options.startTime == null) {\n      options.startTime = parseInt(new Date().getTime() / 1000);\n    }\n    ref = format([datum], keys, options);\n    results = [];\n    for (k = 0, len = ref.length; k < len; k++) {\n      layer = ref[k];\n      results.push(layer.values[0]);\n    }\n    return results;\n  };\n  return format;\n})();\n\nEpoch.data = function() {\n  var args, formatFn, formatter;\n  formatter = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n  if ((formatFn = Epoch.Data.Format[formatter]) == null) {\n    return [];\n  }\n  return formatFn.apply(formatFn, args);\n};\n\nEpoch.Data.formatData = function(data, type, dataFormat) {\n  var a, args, k, len, opts, ref;\n  if (data == null) {\n    data = [];\n  }\n  if (!Epoch.isNonEmptyArray(data)) {\n    return data;\n  }\n  if (Epoch.isString(dataFormat)) {\n    opts = {\n      type: type\n    };\n    return Epoch.data(dataFormat, data, opts);\n  }\n  if (!Epoch.isObject(dataFormat)) {\n    return data;\n  }\n  if (!((dataFormat.name != null) && Epoch.isString(dataFormat.name))) {\n    return data;\n  }\n  if (Epoch.Data.Format[dataFormat.name] == null) {\n    return data;\n  }\n  args = [dataFormat.name, data];\n  if ((dataFormat[\"arguments\"] != null) && Epoch.isArray(dataFormat[\"arguments\"])) {\n    ref = dataFormat[\"arguments\"];\n    for (k = 0, len = ref.length; k < len; k++) {\n      a = ref[k];\n      args.push(a);\n    }\n  }\n  if (dataFormat.options != null) {\n    opts = dataFormat.options;\n    if (type != null) {\n      if (opts.type == null) {\n        opts.type = type;\n      }\n    }\n    args.push(opts);\n  } else if (type != null) {\n    args.push({\n      type: type\n    });\n  }\n  return Epoch.data.apply(Epoch.data, args);\n};\n\nEpoch.Data.formatEntry = function(datum, type, format) {\n  var a, args, dataFormat, entry, k, len, opts, ref;\n  if (format == null) {\n    return datum;\n  }\n  if (Epoch.isString(format)) {\n    opts = {\n      type: type\n    };\n    return Epoch.Data.Format[format].entry(datum, opts);\n  }\n  if (!Epoch.isObject(format)) {\n    return datum;\n  }\n  if (!((format.name != null) && Epoch.isString(format.name))) {\n    return datum;\n  }\n  if (Epoch.Data.Format[format.name] == null) {\n    return datum;\n  }\n  dataFormat = Epoch.Util.defaults(format, {});\n  args = [datum];\n  if ((dataFormat[\"arguments\"] != null) && Epoch.isArray(dataFormat[\"arguments\"])) {\n    ref = dataFormat[\"arguments\"];\n    for (k = 0, len = ref.length; k < len; k++) {\n      a = ref[k];\n      args.push(a);\n    }\n  }\n  if (dataFormat.options != null) {\n    opts = dataFormat.options;\n    opts.type = type;\n    args.push(opts);\n  } else if (type != null) {\n    args.push({\n      type: type\n    });\n  }\n  entry = Epoch.Data.Format[dataFormat.name].entry;\n  return entry.apply(entry, args);\n};\n\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nEpoch.Model = (function(superClass) {\n  var defaults;\n\n  extend(Model, superClass);\n\n  defaults = {\n    dataFormat: null\n  };\n\n  function Model(options) {\n    if (options == null) {\n      options = {};\n    }\n    Model.__super__.constructor.call(this);\n    options = Epoch.Util.defaults(options, defaults);\n    this.dataFormat = options.dataFormat;\n    this.data = options.data;\n    this.loading = false;\n  }\n\n  Model.prototype.setData = function(data) {\n    this.data = data;\n    return this.trigger('data:updated');\n  };\n\n  Model.prototype.push = function(entry) {\n    this.entry = entry;\n    return this.trigger('data:push');\n  };\n\n  Model.prototype.hasData = function() {\n    return this.data != null;\n  };\n\n  Model.prototype.getData = function(type, dataFormat) {\n    if (dataFormat == null) {\n      dataFormat = this.dataFormat;\n    }\n    return Epoch.Data.formatData(this.data, type, dataFormat);\n  };\n\n  Model.prototype.getNext = function(type, dataFormat) {\n    if (dataFormat == null) {\n      dataFormat = this.dataFormat;\n    }\n    return Epoch.Data.formatEntry(this.entry, type, dataFormat);\n  };\n\n  return Model;\n\n})(Epoch.Events);\n\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nEpoch.Chart.Plot = (function(superClass) {\n  var defaultAxisMargins, defaults, optionListeners;\n\n  extend(Plot, superClass);\n\n  defaults = {\n    domain: null,\n    range: null,\n    axes: ['left', 'bottom'],\n    ticks: {\n      top: 14,\n      bottom: 14,\n      left: 5,\n      right: 5\n    },\n    tickFormats: {\n      top: Epoch.Formats.regular,\n      bottom: Epoch.Formats.regular,\n      left: Epoch.Formats.si,\n      right: Epoch.Formats.si\n    }\n  };\n\n  defaultAxisMargins = {\n    top: 25,\n    right: 50,\n    bottom: 25,\n    left: 50\n  };\n\n  optionListeners = {\n    'option:margins.top': 'marginsChanged',\n    'option:margins.right': 'marginsChanged',\n    'option:margins.bottom': 'marginsChanged',\n    'option:margins.left': 'marginsChanged',\n    'option:axes': 'axesChanged',\n    'option:ticks.top': 'ticksChanged',\n    'option:ticks.right': 'ticksChanged',\n    'option:ticks.bottom': 'ticksChanged',\n    'option:ticks.left': 'ticksChanged',\n    'option:tickFormats.top': 'tickFormatsChanged',\n    'option:tickFormats.right': 'tickFormatsChanged',\n    'option:tickFormats.bottom': 'tickFormatsChanged',\n    'option:tickFormats.left': 'tickFormatsChanged',\n    'option:domain': 'domainChanged',\n    'option:range': 'rangeChanged'\n  };\n\n  function Plot(options) {\n    var givenMargins, i, len, pos, ref;\n    this.options = options != null ? options : {};\n    givenMargins = Epoch.Util.copy(this.options.margins) || {};\n    Plot.__super__.constructor.call(this, this.options = Epoch.Util.defaults(this.options, defaults));\n    this.margins = {};\n    ref = ['top', 'right', 'bottom', 'left'];\n    for (i = 0, len = ref.length; i < len; i++) {\n      pos = ref[i];\n      this.margins[pos] = (this.options.margins != null) && (this.options.margins[pos] != null) ? this.options.margins[pos] : this.hasAxis(pos) ? defaultAxisMargins[pos] : 6;\n    }\n    this.g = this.svg.append(\"g\").attr(\"transform\", \"translate(\" + this.margins.left + \", \" + this.margins.top + \")\");\n    this.onAll(optionListeners);\n  }\n\n  Plot.prototype.setTickFormat = function(axis, fn) {\n    return this.options.tickFormats[axis] = fn;\n  };\n\n  Plot.prototype.hasAxis = function(axis) {\n    return this.options.axes.indexOf(axis) > -1;\n  };\n\n  Plot.prototype.innerWidth = function() {\n    return this.width - (this.margins.left + this.margins.right);\n  };\n\n  Plot.prototype.innerHeight = function() {\n    return this.height - (this.margins.top + this.margins.bottom);\n  };\n\n  Plot.prototype.x = function() {\n    var domain, ref;\n    domain = (ref = this.options.domain) != null ? ref : this.extent(function(d) {\n      return d.x;\n    });\n    return d3.scale.linear().domain(domain).range([0, this.innerWidth()]);\n  };\n\n  Plot.prototype.y = function(givenDomain) {\n    return d3.scale.linear().domain(this._getScaleDomain(givenDomain)).range([this.innerHeight(), 0]);\n  };\n\n  Plot.prototype.bottomAxis = function() {\n    return d3.svg.axis().scale(this.x()).orient('bottom').ticks(this.options.ticks.bottom).tickFormat(this.options.tickFormats.bottom);\n  };\n\n  Plot.prototype.topAxis = function() {\n    return d3.svg.axis().scale(this.x()).orient('top').ticks(this.options.ticks.top).tickFormat(this.options.tickFormats.top);\n  };\n\n  Plot.prototype.leftAxis = function() {\n    var range;\n    range = this.options.range ? this.options.range.left : null;\n    return d3.svg.axis().scale(this.y(range)).orient('left').ticks(this.options.ticks.left).tickFormat(this.options.tickFormats.left);\n  };\n\n  Plot.prototype.rightAxis = function() {\n    var range;\n    range = this.options.range ? this.options.range.right : null;\n    return d3.svg.axis().scale(this.y(range)).orient('right').ticks(this.options.ticks.right).tickFormat(this.options.tickFormats.right);\n  };\n\n  Plot.prototype.draw = function() {\n    if (this._axesDrawn) {\n      this._redrawAxes();\n    } else {\n      this._drawAxes();\n    }\n    return Plot.__super__.draw.call(this);\n  };\n\n  Plot.prototype._redrawAxes = function() {\n    if (this.hasAxis('bottom')) {\n      this.g.selectAll('.x.axis.bottom').transition().duration(500).ease('linear').call(this.bottomAxis());\n    }\n    if (this.hasAxis('top')) {\n      this.g.selectAll('.x.axis.top').transition().duration(500).ease('linear').call(this.topAxis());\n    }\n    if (this.hasAxis('left')) {\n      this.g.selectAll('.y.axis.left').transition().duration(500).ease('linear').call(this.leftAxis());\n    }\n    if (this.hasAxis('right')) {\n      return this.g.selectAll('.y.axis.right').transition().duration(500).ease('linear').call(this.rightAxis());\n    }\n  };\n\n  Plot.prototype._drawAxes = function() {\n    if (this.hasAxis('bottom')) {\n      this.g.append(\"g\").attr(\"class\", \"x axis bottom\").attr(\"transform\", \"translate(0, \" + (this.innerHeight()) + \")\").call(this.bottomAxis());\n    }\n    if (this.hasAxis('top')) {\n      this.g.append(\"g\").attr('class', 'x axis top').call(this.topAxis());\n    }\n    if (this.hasAxis('left')) {\n      this.g.append(\"g\").attr(\"class\", \"y axis left\").call(this.leftAxis());\n    }\n    if (this.hasAxis('right')) {\n      this.g.append('g').attr('class', 'y axis right').attr('transform', \"translate(\" + (this.innerWidth()) + \", 0)\").call(this.rightAxis());\n    }\n    return this._axesDrawn = true;\n  };\n\n  Plot.prototype.dimensionsChanged = function() {\n    Plot.__super__.dimensionsChanged.call(this);\n    this.g.selectAll('.axis').remove();\n    this._axesDrawn = false;\n    return this.draw();\n  };\n\n  Plot.prototype.marginsChanged = function() {\n    var pos, ref, size;\n    if (this.options.margins == null) {\n      return;\n    }\n    ref = this.options.margins;\n    for (pos in ref) {\n      if (!hasProp.call(ref, pos)) continue;\n      size = ref[pos];\n      if (size == null) {\n        this.margins[pos] = 6;\n      } else {\n        this.margins[pos] = size;\n      }\n    }\n    this.g.transition().duration(750).attr(\"transform\", \"translate(\" + this.margins.left + \", \" + this.margins.top + \")\");\n    return this.draw();\n  };\n\n  Plot.prototype.axesChanged = function() {\n    var i, len, pos, ref;\n    ref = ['top', 'right', 'bottom', 'left'];\n    for (i = 0, len = ref.length; i < len; i++) {\n      pos = ref[i];\n      if ((this.options.margins != null) && (this.options.margins[pos] != null)) {\n        continue;\n      }\n      if (this.hasAxis(pos)) {\n        this.margins[pos] = defaultAxisMargins[pos];\n      } else {\n        this.margins[pos] = 6;\n      }\n    }\n    this.g.transition().duration(750).attr(\"transform\", \"translate(\" + this.margins.left + \", \" + this.margins.top + \")\");\n    this.g.selectAll('.axis').remove();\n    this._axesDrawn = false;\n    return this.draw();\n  };\n\n  Plot.prototype.ticksChanged = function() {\n    return this.draw();\n  };\n\n  Plot.prototype.tickFormatsChanged = function() {\n    return this.draw();\n  };\n\n  Plot.prototype.domainChanged = function() {\n    return this.draw();\n  };\n\n  Plot.prototype.rangeChanged = function() {\n    return this.draw();\n  };\n\n  return Plot;\n\n})(Epoch.Chart.SVG);\n\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nEpoch.Chart.Area = (function(superClass) {\n  extend(Area, superClass);\n\n  function Area(options) {\n    var base;\n    this.options = options != null ? options : {};\n    if ((base = this.options).type == null) {\n      base.type = 'area';\n    }\n    Area.__super__.constructor.call(this, this.options);\n    this.draw();\n  }\n\n  Area.prototype.y = function() {\n    var a, i, k, layer, len, ref, ref1, ref2, v;\n    a = [];\n    ref = this.getVisibleLayers();\n    for (i = 0, len = ref.length; i < len; i++) {\n      layer = ref[i];\n      ref1 = layer.values;\n      for (k in ref1) {\n        if (!hasProp.call(ref1, k)) continue;\n        v = ref1[k];\n        if (a[k] != null) {\n          a[k] += v.y;\n        }\n        if (a[k] == null) {\n          a[k] = v.y;\n        }\n      }\n    }\n    return d3.scale.linear().domain((ref2 = this.options.range) != null ? ref2 : [0, d3.max(a)]).range([this.height - this.margins.top - this.margins.bottom, 0]);\n  };\n\n  Area.prototype.draw = function() {\n    var area, data, layer, layers, ref, stack, x, y;\n    ref = [this.x(), this.y(), this.getVisibleLayers()], x = ref[0], y = ref[1], layers = ref[2];\n    this.g.selectAll('.layer').remove();\n    if (layers.length === 0) {\n      return;\n    }\n    area = d3.svg.area().x(function(d) {\n      return x(d.x);\n    }).y0(function(d) {\n      return y(d.y0);\n    }).y1(function(d) {\n      return y(d.y0 + d.y);\n    });\n    stack = d3.layout.stack().values(function(d) {\n      return d.values;\n    });\n    data = stack(layers);\n    layer = this.g.selectAll('.layer').data(layers, function(d) {\n      return d.category;\n    });\n    layer.select('.area').attr('d', function(d) {\n      return area(d.values);\n    });\n    layer.enter().append('g').attr('class', function(d) {\n      return d.className;\n    });\n    layer.append('path').attr('class', 'area').attr('d', function(d) {\n      return area(d.values);\n    });\n    return Area.__super__.draw.call(this);\n  };\n\n  return Area;\n\n})(Epoch.Chart.Plot);\n\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nEpoch.Chart.Bar = (function(superClass) {\n  var defaults, horizontal_defaults, horizontal_specific, optionListeners;\n\n  extend(Bar, superClass);\n\n  defaults = {\n    type: 'bar',\n    style: 'grouped',\n    orientation: 'vertical',\n    padding: {\n      bar: 0.08,\n      group: 0.1\n    },\n    outerPadding: {\n      bar: 0.08,\n      group: 0.1\n    }\n  };\n\n  horizontal_specific = {\n    tickFormats: {\n      top: Epoch.Formats.si,\n      bottom: Epoch.Formats.si,\n      left: Epoch.Formats.regular,\n      right: Epoch.Formats.regular\n    }\n  };\n\n  horizontal_defaults = Epoch.Util.defaults(horizontal_specific, defaults);\n\n  optionListeners = {\n    'option:orientation': 'orientationChanged',\n    'option:padding': 'paddingChanged',\n    'option:outerPadding': 'paddingChanged',\n    'option:padding:bar': 'paddingChanged',\n    'option:padding:group': 'paddingChanged',\n    'option:outerPadding:bar': 'paddingChanged',\n    'option:outerPadding:group': 'paddingChanged'\n  };\n\n  function Bar(options) {\n    this.options = options != null ? options : {};\n    if (this._isHorizontal()) {\n      this.options = Epoch.Util.defaults(this.options, horizontal_defaults);\n    } else {\n      this.options = Epoch.Util.defaults(this.options, defaults);\n    }\n    Bar.__super__.constructor.call(this, this.options);\n    this.onAll(optionListeners);\n    this.draw();\n  }\n\n  Bar.prototype._isVertical = function() {\n    return this.options.orientation === 'vertical';\n  };\n\n  Bar.prototype._isHorizontal = function() {\n    return this.options.orientation === 'horizontal';\n  };\n\n  Bar.prototype.x = function() {\n    var extent;\n    if (this._isVertical()) {\n      return d3.scale.ordinal().domain(Epoch.Util.domain(this.getVisibleLayers())).rangeRoundBands([0, this.innerWidth()], this.options.padding.group, this.options.outerPadding.group);\n    } else {\n      extent = this.extent(function(d) {\n        return d.y;\n      });\n      extent[0] = Math.min(0, extent[0]);\n      return d3.scale.linear().domain(extent).range([0, this.width - this.margins.left - this.margins.right]);\n    }\n  };\n\n  Bar.prototype.x1 = function(x0) {\n    var layer;\n    return d3.scale.ordinal().domain((function() {\n      var j, len, ref, results;\n      ref = this.getVisibleLayers();\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        layer = ref[j];\n        results.push(layer.category);\n      }\n      return results;\n    }).call(this)).rangeRoundBands([0, x0.rangeBand()], this.options.padding.bar, this.options.outerPadding.bar);\n  };\n\n  Bar.prototype.y = function() {\n    var extent;\n    if (this._isVertical()) {\n      extent = this.extent(function(d) {\n        return d.y;\n      });\n      extent[0] = Math.min(0, extent[0]);\n      return d3.scale.linear().domain(extent).range([this.height - this.margins.top - this.margins.bottom, 0]);\n    } else {\n      return d3.scale.ordinal().domain(Epoch.Util.domain(this.getVisibleLayers())).rangeRoundBands([0, this.innerHeight()], this.options.padding.group, this.options.outerPadding.group);\n    }\n  };\n\n  Bar.prototype.y1 = function(y0) {\n    var layer;\n    return d3.scale.ordinal().domain((function() {\n      var j, len, ref, results;\n      ref = this.getVisibleLayers();\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        layer = ref[j];\n        results.push(layer.category);\n      }\n      return results;\n    }).call(this)).rangeRoundBands([0, y0.rangeBand()], this.options.padding.bar, this.options.outerPadding.bar);\n  };\n\n  Bar.prototype._remapData = function() {\n    var className, entry, j, k, l, layer, len, len1, map, name, ref, ref1, results, v;\n    map = {};\n    ref = this.getVisibleLayers();\n    for (j = 0, len = ref.length; j < len; j++) {\n      layer = ref[j];\n      className = 'bar ' + layer.className.replace(/\\s*layer\\s*/, '');\n      ref1 = layer.values;\n      for (l = 0, len1 = ref1.length; l < len1; l++) {\n        entry = ref1[l];\n        if (map[name = entry.x] == null) {\n          map[name] = [];\n        }\n        map[entry.x].push({\n          label: layer.category,\n          y: entry.y,\n          className: className\n        });\n      }\n    }\n    results = [];\n    for (k in map) {\n      if (!hasProp.call(map, k)) continue;\n      v = map[k];\n      results.push({\n        group: k,\n        values: v\n      });\n    }\n    return results;\n  };\n\n  Bar.prototype.draw = function() {\n    if (this._isVertical()) {\n      this._drawVertical();\n    } else {\n      this._drawHorizontal();\n    }\n    return Bar.__super__.draw.call(this);\n  };\n\n  Bar.prototype._drawVertical = function() {\n    var data, height, layer, rects, ref, x0, x1, y;\n    ref = [this.x(), this.y()], x0 = ref[0], y = ref[1];\n    x1 = this.x1(x0);\n    height = this.height - this.margins.top - this.margins.bottom;\n    data = this._remapData();\n    layer = this.g.selectAll(\".layer\").data(data, function(d) {\n      return d.group;\n    });\n    layer.transition().duration(750).attr(\"transform\", function(d) {\n      return \"translate(\" + (x0(d.group)) + \", 0)\";\n    });\n    layer.enter().append(\"g\").attr('class', 'layer').attr(\"transform\", function(d) {\n      return \"translate(\" + (x0(d.group)) + \", 0)\";\n    });\n    rects = layer.selectAll('rect').data(function(group) {\n      return group.values;\n    });\n    rects.attr('class', function(d) {\n      return d.className;\n    });\n    rects.transition().duration(600).attr('x', function(d) {\n      return x1(d.label);\n    }).attr('y', function(d) {\n      return y(d.y);\n    }).attr('width', x1.rangeBand()).attr('height', function(d) {\n      return height - y(d.y);\n    });\n    rects.enter().append('rect').attr('class', function(d) {\n      return d.className;\n    }).attr('x', function(d) {\n      return x1(d.label);\n    }).attr('y', function(d) {\n      return y(d.y);\n    }).attr('width', x1.rangeBand()).attr('height', function(d) {\n      return height - y(d.y);\n    });\n    rects.exit().transition().duration(150).style('opacity', '0').remove();\n    return layer.exit().transition().duration(750).style('opacity', '0').remove();\n  };\n\n  Bar.prototype._drawHorizontal = function() {\n    var data, layer, rects, ref, width, x, y0, y1;\n    ref = [this.x(), this.y()], x = ref[0], y0 = ref[1];\n    y1 = this.y1(y0);\n    width = this.width - this.margins.left - this.margins.right;\n    data = this._remapData();\n    layer = this.g.selectAll(\".layer\").data(data, function(d) {\n      return d.group;\n    });\n    layer.transition().duration(750).attr(\"transform\", function(d) {\n      return \"translate(0, \" + (y0(d.group)) + \")\";\n    });\n    layer.enter().append(\"g\").attr('class', 'layer').attr(\"transform\", function(d) {\n      return \"translate(0, \" + (y0(d.group)) + \")\";\n    });\n    rects = layer.selectAll('rect').data(function(group) {\n      return group.values;\n    });\n    rects.attr('class', function(d) {\n      return d.className;\n    });\n    rects.transition().duration(600).attr('x', function(d) {\n      return 0;\n    }).attr('y', function(d) {\n      return y1(d.label);\n    }).attr('height', y1.rangeBand()).attr('width', function(d) {\n      return x(d.y);\n    });\n    rects.enter().append('rect').attr('class', function(d) {\n      return d.className;\n    }).attr('x', function(d) {\n      return 0;\n    }).attr('y', function(d) {\n      return y1(d.label);\n    }).attr('height', y1.rangeBand()).attr('width', function(d) {\n      return x(d.y);\n    });\n    rects.exit().transition().duration(150).style('opacity', '0').remove();\n    return layer.exit().transition().duration(750).style('opacity', '0').remove();\n  };\n\n  Bar.prototype._getTickValues = function(numTicks, dataKey) {\n    var i, step, tickValues, total;\n    if (dataKey == null) {\n      dataKey = 'x';\n    }\n    if (this.data[0] == null) {\n      return [];\n    }\n    total = this.data[0].values.length;\n    step = Math.ceil(total / numTicks) | 0;\n    return tickValues = (function() {\n      var j, ref, ref1, results;\n      results = [];\n      for (i = j = 0, ref = total, ref1 = step; ref1 > 0 ? j < ref : j > ref; i = j += ref1) {\n        results.push(this.data[0].values[i].x);\n      }\n      return results;\n    }).call(this);\n  };\n\n  Bar.prototype.bottomAxis = function() {\n    var axis;\n    axis = d3.svg.axis().scale(this.x()).orient('bottom').ticks(this.options.ticks.bottom).tickFormat(this.options.tickFormats.bottom);\n    if (this._isVertical() && (this.options.ticks.bottom != null)) {\n      axis.tickValues(this._getTickValues(this.options.ticks.bottom));\n    }\n    return axis;\n  };\n\n  Bar.prototype.topAxis = function() {\n    var axis;\n    axis = d3.svg.axis().scale(this.x()).orient('top').ticks(this.options.ticks.top).tickFormat(this.options.tickFormats.top);\n    if (this._isVertical() && (this.options.ticks.top != null)) {\n      axis.tickValues(this._getTickValues(this.options.ticks.top));\n    }\n    return axis;\n  };\n\n  Bar.prototype.leftAxis = function() {\n    var axis;\n    axis = d3.svg.axis().scale(this.y()).orient('left').ticks(this.options.ticks.left).tickFormat(this.options.tickFormats.left);\n    if (this._isHorizontal() && (this.options.ticks.left != null)) {\n      axis.tickValues(this._getTickValues(this.options.ticks.left));\n    }\n    return axis;\n  };\n\n  Bar.prototype.rightAxis = function() {\n    var axis;\n    axis = d3.svg.axis().scale(this.y()).orient('right').ticks(this.options.ticks.right).tickFormat(this.options.tickFormats.right);\n    if (this._isHorizontal() && (this.options.ticks.right != null)) {\n      axis.tickValues(this._getTickValues(this.options.ticks.right));\n    }\n    return axis;\n  };\n\n  Bar.prototype.orientationChanged = function() {\n    var bottom, left, right, top;\n    top = this.options.tickFormats.top;\n    bottom = this.options.tickFormats.bottom;\n    left = this.options.tickFormats.left;\n    right = this.options.tickFormats.right;\n    this.options.tickFormats.left = top;\n    this.options.tickFormats.right = bottom;\n    this.options.tickFormats.top = left;\n    this.options.tickFormats.bottom = right;\n    return this.draw();\n  };\n\n  Bar.prototype.paddingChanged = function() {\n    return this.draw();\n  };\n\n  return Bar;\n\n})(Epoch.Chart.Plot);\n\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nEpoch.Chart.Histogram = (function(superClass) {\n  var defaults, optionListeners;\n\n  extend(Histogram, superClass);\n\n  defaults = {\n    type: 'histogram',\n    domain: [0, 100],\n    bucketRange: [0, 100],\n    buckets: 10,\n    cutOutliers: false\n  };\n\n  optionListeners = {\n    'option:bucketRange': 'bucketRangeChanged',\n    'option:buckets': 'bucketsChanged',\n    'option:cutOutliers': 'cutOutliersChanged'\n  };\n\n  function Histogram(options) {\n    this.options = options != null ? options : {};\n    Histogram.__super__.constructor.call(this, this.options = Epoch.Util.defaults(this.options, defaults));\n    this.onAll(optionListeners);\n    this.draw();\n  }\n\n  Histogram.prototype._prepareData = function(data) {\n    var bucketSize, buckets, i, index, j, k, l, layer, len, len1, point, prepared, preparedLayer, ref, v;\n    bucketSize = (this.options.bucketRange[1] - this.options.bucketRange[0]) / this.options.buckets;\n    prepared = [];\n    for (j = 0, len = data.length; j < len; j++) {\n      layer = data[j];\n      buckets = (function() {\n        var l, ref, results;\n        results = [];\n        for (i = l = 0, ref = this.options.buckets; 0 <= ref ? l < ref : l > ref; i = 0 <= ref ? ++l : --l) {\n          results.push(0);\n        }\n        return results;\n      }).call(this);\n      ref = layer.values;\n      for (l = 0, len1 = ref.length; l < len1; l++) {\n        point = ref[l];\n        index = parseInt((point.x - this.options.bucketRange[0]) / bucketSize);\n        if (this.options.cutOutliers && ((index < 0) || (index >= this.options.buckets))) {\n          continue;\n        }\n        if (index < 0) {\n          index = 0;\n        } else if (index >= this.options.buckets) {\n          index = this.options.buckets - 1;\n        }\n        buckets[index] += parseInt(point.y);\n      }\n      preparedLayer = {\n        values: buckets.map(function(d, i) {\n          return {\n            x: parseInt(i) * bucketSize,\n            y: d\n          };\n        })\n      };\n      for (k in layer) {\n        if (!hasProp.call(layer, k)) continue;\n        v = layer[k];\n        if (k !== 'values') {\n          preparedLayer[k] = v;\n        }\n      }\n      prepared.push(preparedLayer);\n    }\n    return prepared;\n  };\n\n  Histogram.prototype.resetData = function() {\n    this.setData(this.rawData);\n    return this.draw();\n  };\n\n  Histogram.prototype.bucketRangeChanged = function() {\n    return this.resetData();\n  };\n\n  Histogram.prototype.bucketsChanged = function() {\n    return this.resetData();\n  };\n\n  Histogram.prototype.cutOutliersChanged = function() {\n    return this.resetData();\n  };\n\n  return Histogram;\n\n})(Epoch.Chart.Bar);\n\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nEpoch.Chart.Line = (function(superClass) {\n  extend(Line, superClass);\n\n  function Line(options) {\n    var base;\n    this.options = options != null ? options : {};\n    if ((base = this.options).type == null) {\n      base.type = 'line';\n    }\n    Line.__super__.constructor.call(this, this.options);\n    this.draw();\n  }\n\n  Line.prototype.line = function(layer) {\n    var ref, x, y;\n    ref = [this.x(), this.y(layer.range)], x = ref[0], y = ref[1];\n    return d3.svg.line().x(function(d) {\n      return x(d.x);\n    }).y(function(d) {\n      return y(d.y);\n    });\n  };\n\n  Line.prototype.draw = function() {\n    var layer, layers, ref, x, y;\n    ref = [this.x(), this.y(), this.getVisibleLayers()], x = ref[0], y = ref[1], layers = ref[2];\n    if (layers.length === 0) {\n      return this.g.selectAll('.layer').remove();\n    }\n    layer = this.g.selectAll('.layer').data(layers, function(d) {\n      return d.category;\n    });\n    layer.select('.line').transition().duration(500).attr('d', (function(_this) {\n      return function(l) {\n        return _this.line(l)(l.values);\n      };\n    })(this));\n    layer.enter().append('g').attr('class', function(l) {\n      return l.className;\n    }).append('path').attr('class', 'line').attr('d', (function(_this) {\n      return function(l) {\n        return _this.line(l)(l.values);\n      };\n    })(this));\n    layer.exit().transition().duration(750).style('opacity', '0').remove();\n    return Line.__super__.draw.call(this);\n  };\n\n  return Line;\n\n})(Epoch.Chart.Plot);\n\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nEpoch.Chart.Pie = (function(superClass) {\n  var defaults;\n\n  extend(Pie, superClass);\n\n  defaults = {\n    type: 'pie',\n    margin: 10,\n    inner: 0\n  };\n\n  function Pie(options) {\n    this.options = options != null ? options : {};\n    Pie.__super__.constructor.call(this, this.options = Epoch.Util.defaults(this.options, defaults));\n    this.pie = d3.layout.pie().sort(null).value(function(d) {\n      return d.value;\n    });\n    this.arc = d3.svg.arc().outerRadius((function(_this) {\n      return function() {\n        return (Math.max(_this.width, _this.height) / 2) - _this.options.margin;\n      };\n    })(this)).innerRadius((function(_this) {\n      return function() {\n        return _this.options.inner;\n      };\n    })(this));\n    this.g = this.svg.append('g').attr(\"transform\", \"translate(\" + (this.width / 2) + \", \" + (this.height / 2) + \")\");\n    this.on('option:margin', 'marginChanged');\n    this.on('option:inner', 'innerChanged');\n    this.draw();\n  }\n\n  Pie.prototype.draw = function() {\n    var arcs, path, text;\n    this.g.selectAll('.arc').remove();\n    arcs = this.g.selectAll(\".arc\").data(this.pie(this.getVisibleLayers()), function(d) {\n      return d.data.category;\n    });\n    arcs.enter().append('g').attr('class', function(d) {\n      return \"arc pie \" + d.data.className;\n    });\n    arcs.select('path').attr('d', this.arc);\n    arcs.select('text').attr(\"transform\", (function(_this) {\n      return function(d) {\n        return \"translate(\" + (_this.arc.centroid(d)) + \")\";\n      };\n    })(this)).text(function(d) {\n      return d.data.label || d.data.category;\n    });\n    path = arcs.append(\"path\").attr(\"d\", this.arc).each(function(d) {\n      return this._current = d;\n    });\n    text = arcs.append(\"text\").attr(\"transform\", (function(_this) {\n      return function(d) {\n        return \"translate(\" + (_this.arc.centroid(d)) + \")\";\n      };\n    })(this)).attr(\"dy\", \".35em\").style(\"text-anchor\", \"middle\").text(function(d) {\n      return d.data.label || d.data.category;\n    });\n    return Pie.__super__.draw.call(this);\n  };\n\n  Pie.prototype.marginChanged = function() {\n    return this.draw();\n  };\n\n  Pie.prototype.innerChanged = function() {\n    return this.draw();\n  };\n\n  return Pie;\n\n})(Epoch.Chart.SVG);\n\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nEpoch.Chart.Scatter = (function(superClass) {\n  var defaults;\n\n  extend(Scatter, superClass);\n\n  defaults = {\n    type: 'scatter',\n    radius: 3.5,\n    axes: ['top', 'bottom', 'left', 'right']\n  };\n\n  function Scatter(options) {\n    this.options = options != null ? options : {};\n    Scatter.__super__.constructor.call(this, this.options = Epoch.Util.defaults(this.options, defaults));\n    this.on('option:radius', 'radiusChanged');\n    this.draw();\n  }\n\n  Scatter.prototype.draw = function() {\n    var dots, layer, layers, radius, ref, x, y;\n    ref = [this.x(), this.y(), this.getVisibleLayers()], x = ref[0], y = ref[1], layers = ref[2];\n    radius = this.options.radius;\n    if (layers.length === 0) {\n      return this.g.selectAll('.layer').remove();\n    }\n    layer = this.g.selectAll('.layer').data(layers, function(d) {\n      return d.category;\n    });\n    layer.enter().append('g').attr('class', function(d) {\n      return d.className;\n    });\n    dots = layer.selectAll('.dot').data(function(l) {\n      return l.values;\n    });\n    dots.transition().duration(500).attr(\"r\", function(d) {\n      var ref1;\n      return (ref1 = d.r) != null ? ref1 : radius;\n    }).attr(\"cx\", function(d) {\n      return x(d.x);\n    }).attr(\"cy\", function(d) {\n      return y(d.y);\n    });\n    dots.enter().append('circle').attr('class', 'dot').attr(\"r\", function(d) {\n      var ref1;\n      return (ref1 = d.r) != null ? ref1 : radius;\n    }).attr(\"cx\", function(d) {\n      return x(d.x);\n    }).attr(\"cy\", function(d) {\n      return y(d.y);\n    });\n    dots.exit().transition().duration(750).style('opacity', 0).remove();\n    layer.exit().transition().duration(750).style('opacity', 0).remove();\n    return Scatter.__super__.draw.call(this);\n  };\n\n  Scatter.prototype.radiusChanged = function() {\n    return this.draw();\n  };\n\n  return Scatter;\n\n})(Epoch.Chart.Plot);\n\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nEpoch.Time.Plot = (function(superClass) {\n  var defaultAxisMargins, defaults, optionListeners;\n\n  extend(Plot, superClass);\n\n  defaults = {\n    range: null,\n    fps: 24,\n    historySize: 120,\n    windowSize: 40,\n    queueSize: 10,\n    axes: ['bottom'],\n    ticks: {\n      time: 15,\n      left: 5,\n      right: 5\n    },\n    tickFormats: {\n      top: Epoch.Formats.seconds,\n      bottom: Epoch.Formats.seconds,\n      left: Epoch.Formats.si,\n      right: Epoch.Formats.si\n    }\n  };\n\n  defaultAxisMargins = {\n    top: 25,\n    right: 50,\n    bottom: 25,\n    left: 50\n  };\n\n  optionListeners = {\n    'option:margins': 'marginsChanged',\n    'option:margins.top': 'marginsChanged',\n    'option:margins.right': 'marginsChanged',\n    'option:margins.bottom': 'marginsChanged',\n    'option:margins.left': 'marginsChanged',\n    'option:axes': 'axesChanged',\n    'option:ticks': 'ticksChanged',\n    'option:ticks.top': 'ticksChanged',\n    'option:ticks.right': 'ticksChanged',\n    'option:ticks.bottom': 'ticksChanged',\n    'option:ticks.left': 'ticksChanged',\n    'option:tickFormats': 'tickFormatsChanged',\n    'option:tickFormats.top': 'tickFormatsChanged',\n    'option:tickFormats.right': 'tickFormatsChanged',\n    'option:tickFormats.bottom': 'tickFormatsChanged',\n    'option:tickFormats.left': 'tickFormatsChanged'\n  };\n\n  function Plot(options) {\n    var givenMargins, l, len, pos, ref;\n    this.options = options;\n    givenMargins = Epoch.Util.copy(this.options.margins) || {};\n    Plot.__super__.constructor.call(this, this.options = Epoch.Util.defaults(this.options, defaults));\n    if (this.options.model) {\n      this.options.model.on('data:push', (function(_this) {\n        return function() {\n          return _this.pushFromModel();\n        };\n      })(this));\n    }\n    this._queue = [];\n    this.margins = {};\n    ref = ['top', 'right', 'bottom', 'left'];\n    for (l = 0, len = ref.length; l < len; l++) {\n      pos = ref[l];\n      this.margins[pos] = (this.options.margins != null) && (this.options.margins[pos] != null) ? this.options.margins[pos] : this.hasAxis(pos) ? defaultAxisMargins[pos] : 6;\n    }\n    this.svg = this.el.insert('svg', ':first-child').attr('width', this.width).attr('height', this.height).style('z-index', '1000');\n    if (this.el.style('position') !== 'absolute' && this.el.style('position') !== 'relative') {\n      this.el.style('position', 'relative');\n    }\n    this.canvas.style({\n      position: 'absolute',\n      'z-index': '999'\n    });\n    this._sizeCanvas();\n    this.animation = {\n      interval: null,\n      active: false,\n      delta: (function(_this) {\n        return function() {\n          return -(_this.w() / _this.options.fps);\n        };\n      })(this),\n      tickDelta: (function(_this) {\n        return function() {\n          return -((_this.w() / _this.pixelRatio) / _this.options.fps);\n        };\n      })(this),\n      frame: 0,\n      duration: this.options.fps\n    };\n    this._buildAxes();\n    this.animationCallback = (function(_this) {\n      return function() {\n        return _this._animate();\n      };\n    })(this);\n    this.onAll(optionListeners);\n  }\n\n  Plot.prototype._sizeCanvas = function() {\n    this.canvas.attr({\n      width: this.innerWidth(),\n      height: this.innerHeight()\n    });\n    return this.canvas.style({\n      width: (this.innerWidth() / this.pixelRatio) + \"px\",\n      height: (this.innerHeight() / this.pixelRatio) + \"px\",\n      top: this.margins.top + \"px\",\n      left: this.margins.left + \"px\"\n    });\n  };\n\n  Plot.prototype._buildAxes = function() {\n    this.svg.selectAll('.axis').remove();\n    this._prepareTimeAxes();\n    return this._prepareRangeAxes();\n  };\n\n  Plot.prototype._annotateLayers = function(prepared) {\n    var classes, copy, data, i, layer, start;\n    data = [];\n    for (i in prepared) {\n      if (!hasProp.call(prepared, i)) continue;\n      layer = prepared[i];\n      copy = Epoch.Util.copy(layer);\n      start = Math.max(0, layer.values.length - this.options.historySize);\n      copy.values = layer.values.slice(start);\n      classes = ['layer'];\n      classes.push(\"category\" + ((i | 0) + 1));\n      if (layer.label != null) {\n        classes.push(Epoch.Util.dasherize(layer.label));\n      }\n      copy.className = classes.join(' ');\n      copy.visible = true;\n      data.push(copy);\n    }\n    return data;\n  };\n\n  Plot.prototype._offsetX = function() {\n    return 0;\n  };\n\n  Plot.prototype._prepareTimeAxes = function() {\n    var axis;\n    if (this.hasAxis('bottom')) {\n      axis = this.bottomAxis = this.svg.append('g').attr('class', \"x axis bottom canvas\").attr('transform', \"translate(\" + (this.margins.left - 1) + \", \" + (this.innerHeight() / this.pixelRatio + this.margins.top) + \")\");\n      axis.append('path').attr('class', 'domain').attr('d', \"M0,0H\" + (this.innerWidth() / this.pixelRatio + 1));\n    }\n    if (this.hasAxis('top')) {\n      axis = this.topAxis = this.svg.append('g').attr('class', \"x axis top canvas\").attr('transform', \"translate(\" + (this.margins.left - 1) + \", \" + this.margins.top + \")\");\n      axis.append('path').attr('class', 'domain').attr('d', \"M0,0H\" + (this.innerWidth() / this.pixelRatio + 1));\n    }\n    return this._resetInitialTimeTicks();\n  };\n\n  Plot.prototype._resetInitialTimeTicks = function() {\n    var i, k, l, layer, len, ref, ref1, results, tickInterval;\n    tickInterval = this.options.ticks.time;\n    this._ticks = [];\n    this._tickTimer = tickInterval;\n    if (this.bottomAxis != null) {\n      this.bottomAxis.selectAll('.tick').remove();\n    }\n    if (this.topAxis != null) {\n      this.topAxis.selectAll('.tick').remove();\n    }\n    ref = this.data;\n    results = [];\n    for (l = 0, len = ref.length; l < len; l++) {\n      layer = ref[l];\n      if (!Epoch.isNonEmptyArray(layer.values)) {\n        continue;\n      }\n      ref1 = [this.options.windowSize - 1, layer.values.length - 1], i = ref1[0], k = ref1[1];\n      while (i >= 0 && k >= 0) {\n        this._pushTick(i, layer.values[k].time, false, true);\n        i -= tickInterval;\n        k -= tickInterval;\n      }\n      break;\n    }\n    return results;\n  };\n\n  Plot.prototype._prepareRangeAxes = function() {\n    if (this.hasAxis('left')) {\n      this.svg.append(\"g\").attr(\"class\", \"y axis left\").attr('transform', \"translate(\" + (this.margins.left - 1) + \", \" + this.margins.top + \")\").call(this.leftAxis());\n    }\n    if (this.hasAxis('right')) {\n      return this.svg.append('g').attr('class', 'y axis right').attr('transform', \"translate(\" + (this.width - this.margins.right) + \", \" + this.margins.top + \")\").call(this.rightAxis());\n    }\n  };\n\n  Plot.prototype.leftAxis = function() {\n    var axis, ticks;\n    ticks = this.options.ticks.left;\n    axis = d3.svg.axis().scale(this.ySvgLeft()).orient('left').tickFormat(this.options.tickFormats.left);\n    if (ticks === 2) {\n      return axis.tickValues(this.extent(function(d) {\n        return d.y;\n      }));\n    } else {\n      return axis.ticks(ticks);\n    }\n  };\n\n  Plot.prototype.rightAxis = function() {\n    var axis, extent, ticks;\n    extent = this.extent(function(d) {\n      return d.y;\n    });\n    ticks = this.options.ticks.right;\n    axis = d3.svg.axis().scale(this.ySvgRight()).orient('right').tickFormat(this.options.tickFormats.right);\n    if (ticks === 2) {\n      return axis.tickValues(this.extent(function(d) {\n        return d.y;\n      }));\n    } else {\n      return axis.ticks(ticks);\n    }\n  };\n\n  Plot.prototype.hasAxis = function(name) {\n    return this.options.axes.indexOf(name) > -1;\n  };\n\n  Plot.prototype.innerWidth = function() {\n    return (this.width - (this.margins.left + this.margins.right)) * this.pixelRatio;\n  };\n\n  Plot.prototype.innerHeight = function() {\n    return (this.height - (this.margins.top + this.margins.bottom)) * this.pixelRatio;\n  };\n\n  Plot.prototype._prepareEntry = function(entry) {\n    return entry;\n  };\n\n  Plot.prototype._prepareLayers = function(layers) {\n    return layers;\n  };\n\n  Plot.prototype._startTransition = function() {\n    if (this.animation.active === true || this._queue.length === 0) {\n      return;\n    }\n    this.trigger('transition:start');\n    this._shift();\n    this.animation.active = true;\n    return this.animation.interval = setInterval(this.animationCallback, 1000 / this.options.fps);\n  };\n\n  Plot.prototype._stopTransition = function() {\n    var firstTick, l, lastTick, layer, len, ref, ref1;\n    if (!this.inTransition()) {\n      return;\n    }\n    ref = this.data;\n    for (l = 0, len = ref.length; l < len; l++) {\n      layer = ref[l];\n      if (!(layer.values.length > this.options.windowSize + 1)) {\n        continue;\n      }\n      layer.values.shift();\n    }\n    ref1 = [this._ticks[0], this._ticks[this._ticks.length - 1]], firstTick = ref1[0], lastTick = ref1[1];\n    if ((lastTick != null) && lastTick.enter) {\n      lastTick.enter = false;\n      lastTick.opacity = 1;\n    }\n    if ((firstTick != null) && firstTick.exit) {\n      this._shiftTick();\n    }\n    this.animation.frame = 0;\n    this.trigger('transition:end');\n    if (this._queue.length > 0) {\n      return this._shift();\n    } else {\n      this.animation.active = false;\n      return clearInterval(this.animation.interval);\n    }\n  };\n\n  Plot.prototype.inTransition = function() {\n    return this.animation.active;\n  };\n\n  Plot.prototype.push = function(layers) {\n    layers = this._prepareLayers(layers);\n    if (this._queue.length > this.options.queueSize) {\n      this._queue.splice(this.options.queueSize, this._queue.length - this.options.queueSize);\n    }\n    if (this._queue.length === this.options.queueSize) {\n      return false;\n    }\n    this._queue.push(layers.map((function(_this) {\n      return function(entry) {\n        return _this._prepareEntry(entry);\n      };\n    })(this)));\n    this.trigger('push');\n    if (!this.inTransition()) {\n      return this._startTransition();\n    }\n  };\n\n  Plot.prototype.pushFromModel = function() {\n    return this.push(this.options.model.getNext(this.options.type, this.options.dataFormat));\n  };\n\n  Plot.prototype._shift = function() {\n    var entry, i, layer, ref;\n    this.trigger('before:shift');\n    entry = this._queue.shift();\n    ref = this.data;\n    for (i in ref) {\n      if (!hasProp.call(ref, i)) continue;\n      layer = ref[i];\n      layer.values.push(entry[i]);\n    }\n    this._updateTicks(entry[0].time);\n    this._transitionRangeAxes();\n    return this.trigger('after:shift');\n  };\n\n  Plot.prototype._transitionRangeAxes = function() {\n    if (this.hasAxis('left')) {\n      this.svg.selectAll('.y.axis.left').transition().duration(500).ease('linear').call(this.leftAxis());\n    }\n    if (this.hasAxis('right')) {\n      return this.svg.selectAll('.y.axis.right').transition().duration(500).ease('linear').call(this.rightAxis());\n    }\n  };\n\n  Plot.prototype._animate = function() {\n    if (!this.inTransition()) {\n      return;\n    }\n    if (++this.animation.frame === this.animation.duration) {\n      this._stopTransition();\n    }\n    this.draw(this.animation.frame * this.animation.delta());\n    return this._updateTimeAxes();\n  };\n\n  Plot.prototype.y = function(givenDomain) {\n    return d3.scale.linear().domain(this._getScaleDomain(givenDomain)).range([this.innerHeight(), 0]);\n  };\n\n  Plot.prototype.ySvg = function(givenDomain) {\n    return d3.scale.linear().domain(this._getScaleDomain(givenDomain)).range([this.innerHeight() / this.pixelRatio, 0]);\n  };\n\n  Plot.prototype.ySvgLeft = function() {\n    if (this.options.range != null) {\n      return this.ySvg(this.options.range.left);\n    } else {\n      return this.ySvg();\n    }\n  };\n\n  Plot.prototype.ySvgRight = function() {\n    if (this.options.range != null) {\n      return this.ySvg(this.options.range.right);\n    } else {\n      return this.ySvg();\n    }\n  };\n\n  Plot.prototype.w = function() {\n    return this.innerWidth() / this.options.windowSize;\n  };\n\n  Plot.prototype._updateTicks = function(newTime) {\n    if (!(this.hasAxis('top') || this.hasAxis('bottom'))) {\n      return;\n    }\n    if (!((++this._tickTimer) % this.options.ticks.time)) {\n      this._pushTick(this.options.windowSize, newTime, true);\n    }\n    if (!(this._ticks.length > 0)) {\n      return;\n    }\n    if (!(this._ticks[0].x - (this.w() / this.pixelRatio) >= 0)) {\n      return this._ticks[0].exit = true;\n    }\n  };\n\n  Plot.prototype._pushTick = function(bucket, time, enter, reverse) {\n    var g, tick;\n    if (enter == null) {\n      enter = false;\n    }\n    if (reverse == null) {\n      reverse = false;\n    }\n    if (!(this.hasAxis('top') || this.hasAxis('bottom'))) {\n      return;\n    }\n    tick = {\n      time: time,\n      x: bucket * (this.w() / this.pixelRatio) + this._offsetX(),\n      opacity: enter ? 0 : 1,\n      enter: enter ? true : false,\n      exit: false\n    };\n    if (this.hasAxis('bottom')) {\n      g = this.bottomAxis.append('g').attr('class', 'tick major').attr('transform', \"translate(\" + (tick.x + 1) + \",0)\").style('opacity', tick.opacity);\n      g.append('line').attr('y2', 6);\n      g.append('text').attr('text-anchor', 'middle').attr('dy', 19).text(this.options.tickFormats.bottom(tick.time));\n      tick.bottomEl = g;\n    }\n    if (this.hasAxis('top')) {\n      g = this.topAxis.append('g').attr('class', 'tick major').attr('transform', \"translate(\" + (tick.x + 1) + \",0)\").style('opacity', tick.opacity);\n      g.append('line').attr('y2', -6);\n      g.append('text').attr('text-anchor', 'middle').attr('dy', -10).text(this.options.tickFormats.top(tick.time));\n      tick.topEl = g;\n    }\n    if (reverse) {\n      this._ticks.unshift(tick);\n    } else {\n      this._ticks.push(tick);\n    }\n    return tick;\n  };\n\n  Plot.prototype._shiftTick = function() {\n    var tick;\n    if (!(this._ticks.length > 0)) {\n      return;\n    }\n    tick = this._ticks.shift();\n    if (tick.topEl != null) {\n      tick.topEl.remove();\n    }\n    if (tick.bottomEl != null) {\n      return tick.bottomEl.remove();\n    }\n  };\n\n  Plot.prototype._updateTimeAxes = function() {\n    var dop, dx, l, len, ref, ref1, results, tick;\n    if (!(this.hasAxis('top') || this.hasAxis('bottom'))) {\n      return;\n    }\n    ref = [this.animation.tickDelta(), 1 / this.options.fps], dx = ref[0], dop = ref[1];\n    ref1 = this._ticks;\n    results = [];\n    for (l = 0, len = ref1.length; l < len; l++) {\n      tick = ref1[l];\n      tick.x += dx;\n      if (this.hasAxis('bottom')) {\n        tick.bottomEl.attr('transform', \"translate(\" + (tick.x + 1) + \",0)\");\n      }\n      if (this.hasAxis('top')) {\n        tick.topEl.attr('transform', \"translate(\" + (tick.x + 1) + \",0)\");\n      }\n      if (tick.enter) {\n        tick.opacity += dop;\n      } else if (tick.exit) {\n        tick.opacity -= dop;\n      }\n      if (tick.enter || tick.exit) {\n        if (this.hasAxis('bottom')) {\n          tick.bottomEl.style('opacity', tick.opacity);\n        }\n        if (this.hasAxis('top')) {\n          results.push(tick.topEl.style('opacity', tick.opacity));\n        } else {\n          results.push(void 0);\n        }\n      } else {\n        results.push(void 0);\n      }\n    }\n    return results;\n  };\n\n  Plot.prototype.draw = function(delta) {\n    if (delta == null) {\n      delta = 0;\n    }\n    return Plot.__super__.draw.call(this);\n  };\n\n  Plot.prototype.dimensionsChanged = function() {\n    Plot.__super__.dimensionsChanged.call(this);\n    this.svg.attr('width', this.width).attr('height', this.height);\n    this._sizeCanvas();\n    this._buildAxes();\n    return this.draw(this.animation.frame * this.animation.delta());\n  };\n\n  Plot.prototype.axesChanged = function() {\n    var l, len, pos, ref;\n    ref = ['top', 'right', 'bottom', 'left'];\n    for (l = 0, len = ref.length; l < len; l++) {\n      pos = ref[l];\n      if ((this.options.margins != null) && (this.options.margins[pos] != null)) {\n        continue;\n      }\n      if (this.hasAxis(pos)) {\n        this.margins[pos] = defaultAxisMargins[pos];\n      } else {\n        this.margins[pos] = 6;\n      }\n    }\n    this._sizeCanvas();\n    this._buildAxes();\n    return this.draw(this.animation.frame * this.animation.delta());\n  };\n\n  Plot.prototype.ticksChanged = function() {\n    this._resetInitialTimeTicks();\n    this._transitionRangeAxes();\n    return this.draw(this.animation.frame * this.animation.delta());\n  };\n\n  Plot.prototype.tickFormatsChanged = function() {\n    this._resetInitialTimeTicks();\n    this._transitionRangeAxes();\n    return this.draw(this.animation.frame * this.animation.delta());\n  };\n\n  Plot.prototype.marginsChanged = function() {\n    var pos, ref, size;\n    if (this.options.margins == null) {\n      return;\n    }\n    ref = this.options.margins;\n    for (pos in ref) {\n      if (!hasProp.call(ref, pos)) continue;\n      size = ref[pos];\n      if (size == null) {\n        this.margins[pos] = 6;\n      } else {\n        this.margins[pos] = size;\n      }\n    }\n    this._sizeCanvas();\n    return this.draw(this.animation.frame * this.animation.delta());\n  };\n\n  Plot.prototype.layerChanged = function() {\n    this._transitionRangeAxes();\n    return Plot.__super__.layerChanged.call(this);\n  };\n\n  return Plot;\n\n})(Epoch.Chart.Canvas);\n\nEpoch.Time.Stack = (function(superClass) {\n  extend(Stack, superClass);\n\n  function Stack() {\n    return Stack.__super__.constructor.apply(this, arguments);\n  }\n\n  Stack.prototype._stackLayers = function() {\n    var i, l, layer, layers, ref, results, y0;\n    if (!((layers = this.getVisibleLayers()).length > 0)) {\n      return;\n    }\n    results = [];\n    for (i = l = 0, ref = layers[0].values.length; 0 <= ref ? l < ref : l > ref; i = 0 <= ref ? ++l : --l) {\n      y0 = 0;\n      results.push((function() {\n        var len, m, results1;\n        results1 = [];\n        for (m = 0, len = layers.length; m < len; m++) {\n          layer = layers[m];\n          layer.values[i].y0 = y0;\n          results1.push(y0 += layer.values[i].y);\n        }\n        return results1;\n      })());\n    }\n    return results;\n  };\n\n  Stack.prototype._prepareLayers = function(layers) {\n    var d, i, y0;\n    y0 = 0;\n    for (i in layers) {\n      if (!hasProp.call(layers, i)) continue;\n      d = layers[i];\n      if (!this.data[i].visible) {\n        continue;\n      }\n      d.y0 = y0;\n      y0 += d.y;\n    }\n    return layers;\n  };\n\n  Stack.prototype.setData = function(data) {\n    Stack.__super__.setData.call(this, data);\n    return this._stackLayers();\n  };\n\n  Stack.prototype.extent = function() {\n    var i, j, l, layers, m, max, ref, ref1, ref2, sum;\n    ref = [0, this.getVisibleLayers()], max = ref[0], layers = ref[1];\n    if (!layers.length) {\n      return [0, 0];\n    }\n    for (i = l = 0, ref1 = layers[0].values.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\n      sum = 0;\n      for (j = m = 0, ref2 = layers.length; 0 <= ref2 ? m < ref2 : m > ref2; j = 0 <= ref2 ? ++m : --m) {\n        sum += layers[j].values[i].y;\n      }\n      if (sum > max) {\n        max = sum;\n      }\n    }\n    return [0, max];\n  };\n\n  Stack.prototype.layerChanged = function() {\n    var l, layers, len, ref;\n    this._stackLayers();\n    ref = this._queue;\n    for (l = 0, len = ref.length; l < len; l++) {\n      layers = ref[l];\n      this._prepareLayers(layers);\n    }\n    return Stack.__super__.layerChanged.call(this);\n  };\n\n  return Stack;\n\n})(Epoch.Time.Plot);\n\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nEpoch.Time.Area = (function(superClass) {\n  extend(Area, superClass);\n\n  function Area(options) {\n    var base;\n    this.options = options != null ? options : {};\n    if ((base = this.options).type == null) {\n      base.type = 'time.area';\n    }\n    Area.__super__.constructor.call(this, this.options);\n    this.draw();\n  }\n\n  Area.prototype.setStyles = function(layer) {\n    var styles;\n    if ((layer != null) && (layer.className != null)) {\n      styles = this.getStyles(\"g.\" + (layer.className.replace(/\\s/g, '.')) + \" path.area\");\n    } else {\n      styles = this.getStyles(\"g path.area\");\n    }\n    this.ctx.fillStyle = styles.fill;\n    if (styles.stroke != null) {\n      this.ctx.strokeStyle = styles.stroke;\n    }\n    if (styles['stroke-width'] != null) {\n      return this.ctx.lineWidth = styles['stroke-width'].replace('px', '');\n    }\n  };\n\n  Area.prototype._drawAreas = function(delta) {\n    var args, borderX, entry, firstX, i, j, k, l, layer, layers, ref, ref1, ref2, results, trans, w, y;\n    if (delta == null) {\n      delta = 0;\n    }\n    ref = [this.y(), this.w(), this.getVisibleLayers()], y = ref[0], w = ref[1], layers = ref[2];\n    results = [];\n    for (i = l = ref1 = layers.length - 1; ref1 <= 0 ? l <= 0 : l >= 0; i = ref1 <= 0 ? ++l : --l) {\n      if (!(layer = layers[i])) {\n        continue;\n      }\n      this.setStyles(layer);\n      this.ctx.beginPath();\n      ref2 = [this.options.windowSize, layer.values.length, this.inTransition()], j = ref2[0], k = ref2[1], trans = ref2[2];\n      firstX = null;\n      while ((--j >= -2) && (--k >= 0)) {\n        entry = layer.values[k];\n        args = [(j + 1) * w + delta, y(entry.y + entry.y0)];\n        if (trans) {\n          args[0] += w;\n        }\n        if (i === this.options.windowSize - 1) {\n          this.ctx.moveTo.apply(this.ctx, args);\n        } else {\n          this.ctx.lineTo.apply(this.ctx, args);\n        }\n      }\n      if (trans) {\n        borderX = (j + 3) * w + delta;\n      } else {\n        borderX = (j + 2) * w + delta;\n      }\n      this.ctx.lineTo(borderX, this.innerHeight());\n      this.ctx.lineTo(this.width * this.pixelRatio + w + delta, this.innerHeight());\n      this.ctx.closePath();\n      results.push(this.ctx.fill());\n    }\n    return results;\n  };\n\n  Area.prototype._drawStrokes = function(delta) {\n    var args, entry, firstX, i, k, l, layer, layers, ref, ref1, ref2, results, trans, w, y;\n    if (delta == null) {\n      delta = 0;\n    }\n    ref = [this.y(), this.w(), this.getVisibleLayers()], y = ref[0], w = ref[1], layers = ref[2];\n    results = [];\n    for (i = l = ref1 = layers.length - 1; ref1 <= 0 ? l <= 0 : l >= 0; i = ref1 <= 0 ? ++l : --l) {\n      if (!(layer = layers[i])) {\n        continue;\n      }\n      this.setStyles(layer);\n      this.ctx.beginPath();\n      ref2 = [this.options.windowSize, layer.values.length, this.inTransition()], i = ref2[0], k = ref2[1], trans = ref2[2];\n      firstX = null;\n      while ((--i >= -2) && (--k >= 0)) {\n        entry = layer.values[k];\n        args = [(i + 1) * w + delta, y(entry.y + entry.y0)];\n        if (trans) {\n          args[0] += w;\n        }\n        if (i === this.options.windowSize - 1) {\n          this.ctx.moveTo.apply(this.ctx, args);\n        } else {\n          this.ctx.lineTo.apply(this.ctx, args);\n        }\n      }\n      results.push(this.ctx.stroke());\n    }\n    return results;\n  };\n\n  Area.prototype.draw = function(delta) {\n    if (delta == null) {\n      delta = 0;\n    }\n    this.clear();\n    this._drawAreas(delta);\n    this._drawStrokes(delta);\n    return Area.__super__.draw.call(this);\n  };\n\n  return Area;\n\n})(Epoch.Time.Stack);\n\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nEpoch.Time.Bar = (function(superClass) {\n  extend(Bar, superClass);\n\n  function Bar(options) {\n    var base;\n    this.options = options != null ? options : {};\n    if ((base = this.options).type == null) {\n      base.type = 'time.bar';\n    }\n    Bar.__super__.constructor.call(this, this.options);\n    this.draw();\n  }\n\n  Bar.prototype._offsetX = function() {\n    return 0.5 * this.w() / this.pixelRatio;\n  };\n\n  Bar.prototype.setStyles = function(className) {\n    var styles;\n    styles = this.getStyles(\"rect.bar.\" + (className.replace(/\\s/g, '.')));\n    this.ctx.fillStyle = styles.fill;\n    if ((styles.stroke == null) || styles.stroke === 'none') {\n      this.ctx.strokeStyle = 'transparent';\n    } else {\n      this.ctx.strokeStyle = styles.stroke;\n    }\n    if (styles['stroke-width'] != null) {\n      return this.ctx.lineWidth = styles['stroke-width'].replace('px', '');\n    }\n  };\n\n  Bar.prototype.draw = function(delta) {\n    var args, entry, ex, ey, ey0, i, iBoundry, j, k, layer, len, ref, ref1, ref2, ref3, trans, w, y;\n    if (delta == null) {\n      delta = 0;\n    }\n    this.clear();\n    ref = [this.y(), this.w()], y = ref[0], w = ref[1];\n    ref1 = this.getVisibleLayers();\n    for (j = 0, len = ref1.length; j < len; j++) {\n      layer = ref1[j];\n      if (!Epoch.isNonEmptyArray(layer.values)) {\n        continue;\n      }\n      this.setStyles(layer.className);\n      ref2 = [this.options.windowSize, layer.values.length, this.inTransition()], i = ref2[0], k = ref2[1], trans = ref2[2];\n      iBoundry = trans ? -1 : 0;\n      while ((--i >= iBoundry) && (--k >= 0)) {\n        entry = layer.values[k];\n        ref3 = [i * w + delta, entry.y, entry.y0], ex = ref3[0], ey = ref3[1], ey0 = ref3[2];\n        if (trans) {\n          ex += w;\n        }\n        args = [ex + 1, y(ey + ey0), w - 2, this.innerHeight() - y(ey) + 0.5 * this.pixelRatio];\n        this.ctx.fillRect.apply(this.ctx, args);\n        this.ctx.strokeRect.apply(this.ctx, args);\n      }\n    }\n    return Bar.__super__.draw.call(this);\n  };\n\n  return Bar;\n\n})(Epoch.Time.Stack);\n\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nEpoch.Time.Gauge = (function(superClass) {\n  var defaults, optionListeners;\n\n  extend(Gauge, superClass);\n\n  defaults = {\n    type: 'time.gauge',\n    domain: [0, 1],\n    ticks: 10,\n    tickSize: 5,\n    tickOffset: 5,\n    fps: 34,\n    format: Epoch.Formats.percent\n  };\n\n  optionListeners = {\n    'option:domain': 'domainChanged',\n    'option:ticks': 'ticksChanged',\n    'option:tickSize': 'tickSizeChanged',\n    'option:tickOffset': 'tickOffsetChanged',\n    'option:format': 'formatChanged'\n  };\n\n  function Gauge(options) {\n    this.options = options != null ? options : {};\n    Gauge.__super__.constructor.call(this, this.options = Epoch.Util.defaults(this.options, defaults));\n    this.value = this.options.value || 0;\n    if (this.options.model) {\n      this.options.model.on('data:push', (function(_this) {\n        return function() {\n          return _this.pushFromModel();\n        };\n      })(this));\n    }\n    if (this.el.style('position') !== 'absolute' && this.el.style('position') !== 'relative') {\n      this.el.style('position', 'relative');\n    }\n    this.svg = this.el.insert('svg', ':first-child').attr('width', this.width).attr('height', this.height).attr('class', 'gauge-labels');\n    this.svg.style({\n      'position': 'absolute',\n      'z-index': '1'\n    });\n    this.svg.append('g').attr('transform', \"translate(\" + (this.textX()) + \", \" + (this.textY()) + \")\").append('text').attr('class', 'value').text(this.options.format(this.value));\n    this.animation = {\n      interval: null,\n      active: false,\n      delta: 0,\n      target: 0\n    };\n    this._animate = (function(_this) {\n      return function() {\n        if (Math.abs(_this.animation.target - _this.value) < Math.abs(_this.animation.delta)) {\n          _this.value = _this.animation.target;\n          clearInterval(_this.animation.interval);\n          _this.animation.active = false;\n        } else {\n          _this.value += _this.animation.delta;\n        }\n        _this.svg.select('text.value').text(_this.options.format(_this.value));\n        return _this.draw();\n      };\n    })(this);\n    this.onAll(optionListeners);\n    this.draw();\n  }\n\n  Gauge.prototype.update = function(value) {\n    this.animation.target = value;\n    this.animation.delta = (value - this.value) / this.options.fps;\n    if (!this.animation.active) {\n      this.animation.interval = setInterval(this._animate, 1000 / this.options.fps);\n      return this.animation.active = true;\n    }\n  };\n\n  Gauge.prototype.push = function(value) {\n    return this.update(value);\n  };\n\n  Gauge.prototype.pushFromModel = function() {\n    var next;\n    next = this.options.model.getNext(this.options.type, this.options.dataFormat);\n    return this.update(next);\n  };\n\n  Gauge.prototype.radius = function() {\n    return this.getHeight() / 1.58;\n  };\n\n  Gauge.prototype.centerX = function() {\n    return this.getWidth() / 2;\n  };\n\n  Gauge.prototype.centerY = function() {\n    return 0.68 * this.getHeight();\n  };\n\n  Gauge.prototype.textX = function() {\n    return this.width / 2;\n  };\n\n  Gauge.prototype.textY = function() {\n    return 0.48 * this.height;\n  };\n\n  Gauge.prototype.getAngle = function(value) {\n    var a, b, ref;\n    ref = this.options.domain, a = ref[0], b = ref[1];\n    return ((value - a) / (b - a)) * (Math.PI + 2 * Math.PI / 8) - Math.PI / 2 - Math.PI / 8;\n  };\n\n  Gauge.prototype.setStyles = function(selector) {\n    var styles;\n    styles = this.getStyles(selector);\n    this.ctx.fillStyle = styles.fill;\n    this.ctx.strokeStyle = styles.stroke;\n    if (styles['stroke-width'] != null) {\n      return this.ctx.lineWidth = styles['stroke-width'].replace('px', '');\n    }\n  };\n\n  Gauge.prototype.draw = function() {\n    var a, c, cx, cy, i, j, r, ref, ref1, ref2, ref3, s, t, tickOffset, tickSize, x1, x2, y1, y2;\n    ref = [this.centerX(), this.centerY(), this.radius()], cx = ref[0], cy = ref[1], r = ref[2];\n    ref1 = [this.options.tickOffset, this.options.tickSize], tickOffset = ref1[0], tickSize = ref1[1];\n    this.clear();\n    t = d3.scale.linear().domain([0, this.options.ticks]).range([-(9 / 8) * Math.PI, Math.PI / 8]);\n    this.setStyles('.epoch .gauge .tick');\n    this.ctx.beginPath();\n    for (i = j = 0, ref2 = this.options.ticks; 0 <= ref2 ? j <= ref2 : j >= ref2; i = 0 <= ref2 ? ++j : --j) {\n      a = t(i);\n      ref3 = [Math.cos(a), Math.sin(a)], c = ref3[0], s = ref3[1];\n      x1 = c * (r - tickOffset) + cx;\n      y1 = s * (r - tickOffset) + cy;\n      x2 = c * (r - tickOffset - tickSize) + cx;\n      y2 = s * (r - tickOffset - tickSize) + cy;\n      this.ctx.moveTo(x1, y1);\n      this.ctx.lineTo(x2, y2);\n    }\n    this.ctx.stroke();\n    this.setStyles('.epoch .gauge .arc.outer');\n    this.ctx.beginPath();\n    this.ctx.arc(cx, cy, r, -(9 / 8) * Math.PI, (1 / 8) * Math.PI, false);\n    this.ctx.stroke();\n    this.setStyles('.epoch .gauge .arc.inner');\n    this.ctx.beginPath();\n    this.ctx.arc(cx, cy, r - 10, -(9 / 8) * Math.PI, (1 / 8) * Math.PI, false);\n    this.ctx.stroke();\n    this.drawNeedle();\n    return Gauge.__super__.draw.call(this);\n  };\n\n  Gauge.prototype.drawNeedle = function() {\n    var cx, cy, r, ratio, ref;\n    ref = [this.centerX(), this.centerY(), this.radius()], cx = ref[0], cy = ref[1], r = ref[2];\n    ratio = this.value / this.options.domain[1];\n    this.setStyles('.epoch .gauge .needle');\n    this.ctx.beginPath();\n    this.ctx.save();\n    this.ctx.translate(cx, cy);\n    this.ctx.rotate(this.getAngle(this.value));\n    this.ctx.moveTo(4 * this.pixelRatio, 0);\n    this.ctx.lineTo(-4 * this.pixelRatio, 0);\n    this.ctx.lineTo(-1 * this.pixelRatio, 19 - r);\n    this.ctx.lineTo(1, 19 - r);\n    this.ctx.fill();\n    this.setStyles('.epoch .gauge .needle-base');\n    this.ctx.beginPath();\n    this.ctx.arc(0, 0, this.getWidth() / 25, 0, 2 * Math.PI);\n    this.ctx.fill();\n    return this.ctx.restore();\n  };\n\n  Gauge.prototype.domainChanged = function() {\n    return this.draw();\n  };\n\n  Gauge.prototype.ticksChanged = function() {\n    return this.draw();\n  };\n\n  Gauge.prototype.tickSizeChanged = function() {\n    return this.draw();\n  };\n\n  Gauge.prototype.tickOffsetChanged = function() {\n    return this.draw();\n  };\n\n  Gauge.prototype.formatChanged = function() {\n    return this.svg.select('text.value').text(this.options.format(this.value));\n  };\n\n  return Gauge;\n\n})(Epoch.Chart.Canvas);\n\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nEpoch.Time.Heatmap = (function(superClass) {\n  var colorFunctions, defaults, optionListeners;\n\n  extend(Heatmap, superClass);\n\n  defaults = {\n    type: 'time.heatmap',\n    buckets: 10,\n    bucketRange: [0, 100],\n    opacity: 'linear',\n    bucketPadding: 2,\n    paintZeroValues: false,\n    cutOutliers: false\n  };\n\n  colorFunctions = {\n    root: function(value, max) {\n      return Math.pow(value / max, 0.5);\n    },\n    linear: function(value, max) {\n      return value / max;\n    },\n    quadratic: function(value, max) {\n      return Math.pow(value / max, 2);\n    },\n    cubic: function(value, max) {\n      return Math.pow(value / max, 3);\n    },\n    quartic: function(value, max) {\n      return Math.pow(value / max, 4);\n    },\n    quintic: function(value, max) {\n      return Math.pow(value / max, 5);\n    }\n  };\n\n  optionListeners = {\n    'option:buckets': 'bucketsChanged',\n    'option:bucketRange': 'bucketRangeChanged',\n    'option:opacity': 'opacityChanged',\n    'option:bucketPadding': 'bucketPaddingChanged',\n    'option:paintZeroValues': 'paintZeroValuesChanged',\n    'option:cutOutliers': 'cutOutliersChanged'\n  };\n\n  function Heatmap(options) {\n    this.options = options != null ? options : {};\n    Heatmap.__super__.constructor.call(this, this.options = Epoch.Util.defaults(this.options, defaults));\n    this._setOpacityFunction();\n    this._setupPaintCanvas();\n    this.onAll(optionListeners);\n    this.draw();\n  }\n\n  Heatmap.prototype._setOpacityFunction = function() {\n    if (Epoch.isString(this.options.opacity)) {\n      this._opacityFn = colorFunctions[this.options.opacity];\n      if (this._opacityFn == null) {\n        return Epoch.exception(\"Unknown coloring function provided '\" + this.options.opacity + \"'\");\n      }\n    } else if (Epoch.isFunction(this.options.opacity)) {\n      return this._opacityFn = this.options.opacity;\n    } else {\n      return Epoch.exception(\"Unknown type for provided coloring function.\");\n    }\n  };\n\n  Heatmap.prototype.setData = function(data) {\n    var k, layer, len, ref, results;\n    Heatmap.__super__.setData.call(this, data);\n    ref = this.data;\n    results = [];\n    for (k = 0, len = ref.length; k < len; k++) {\n      layer = ref[k];\n      results.push(layer.values = layer.values.map((function(_this) {\n        return function(entry) {\n          return _this._prepareEntry(entry);\n        };\n      })(this)));\n    }\n    return results;\n  };\n\n  Heatmap.prototype._getBuckets = function(entry) {\n    var bucketSize, count, i, index, k, prepared, ref, ref1, value;\n    prepared = {\n      time: entry.time,\n      max: 0,\n      buckets: (function() {\n        var k, ref, results;\n        results = [];\n        for (i = k = 0, ref = this.options.buckets; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n          results.push(0);\n        }\n        return results;\n      }).call(this)\n    };\n    bucketSize = (this.options.bucketRange[1] - this.options.bucketRange[0]) / this.options.buckets;\n    ref = entry.histogram;\n    for (value in ref) {\n      if (!hasProp.call(ref, value)) continue;\n      count = ref[value];\n      index = parseInt((value - this.options.bucketRange[0]) / bucketSize);\n      if (this.options.cutOutliers && ((index < 0) || (index >= this.options.buckets))) {\n        continue;\n      }\n      if (index < 0) {\n        index = 0;\n      } else if (index >= this.options.buckets) {\n        index = this.options.buckets - 1;\n      }\n      prepared.buckets[index] += parseInt(count);\n    }\n    for (i = k = 0, ref1 = prepared.buckets.length; 0 <= ref1 ? k < ref1 : k > ref1; i = 0 <= ref1 ? ++k : --k) {\n      prepared.max = Math.max(prepared.max, prepared.buckets[i]);\n    }\n    return prepared;\n  };\n\n  Heatmap.prototype.y = function() {\n    return d3.scale.linear().domain(this.options.bucketRange).range([this.innerHeight(), 0]);\n  };\n\n  Heatmap.prototype.ySvg = function() {\n    return d3.scale.linear().domain(this.options.bucketRange).range([this.innerHeight() / this.pixelRatio, 0]);\n  };\n\n  Heatmap.prototype.h = function() {\n    return this.innerHeight() / this.options.buckets;\n  };\n\n  Heatmap.prototype._offsetX = function() {\n    return 0.5 * this.w() / this.pixelRatio;\n  };\n\n  Heatmap.prototype._setupPaintCanvas = function() {\n    this.paintWidth = (this.options.windowSize + 1) * this.w();\n    this.paintHeight = this.height * this.pixelRatio;\n    this.paint = document.createElement('CANVAS');\n    this.paint.width = this.paintWidth;\n    this.paint.height = this.paintHeight;\n    this.p = Epoch.Util.getContext(this.paint);\n    this.redraw();\n    this.on('after:shift', '_paintEntry');\n    this.on('transition:end', '_shiftPaintCanvas');\n    return this.on('transition:end', (function(_this) {\n      return function() {\n        return _this.draw(_this.animation.frame * _this.animation.delta());\n      };\n    })(this));\n  };\n\n  Heatmap.prototype.redraw = function() {\n    var drawColumn, entryIndex;\n    if (!(Epoch.isNonEmptyArray(this.data) && Epoch.isNonEmptyArray(this.data[0].values))) {\n      return;\n    }\n    entryIndex = this.data[0].values.length;\n    drawColumn = this.options.windowSize;\n    if (this.inTransition()) {\n      drawColumn++;\n    }\n    while ((--entryIndex >= 0) && (--drawColumn >= 0)) {\n      this._paintEntry(entryIndex, drawColumn);\n    }\n    return this.draw(this.animation.frame * this.animation.delta());\n  };\n\n  Heatmap.prototype._computeColor = function(value, max, color) {\n    return Epoch.Util.toRGBA(color, this._opacityFn(value, max));\n  };\n\n  Heatmap.prototype._paintEntry = function(entryIndex, drawColumn) {\n    var bucket, bucketTotals, color, count, entries, entry, h, i, j, k, layer, len, len1, m, max, maxTotal, ref, ref1, ref2, results, styles, sum, w, xPos;\n    if (entryIndex == null) {\n      entryIndex = null;\n    }\n    if (drawColumn == null) {\n      drawColumn = null;\n    }\n    ref = [this.w(), this.h()], w = ref[0], h = ref[1];\n    if (entryIndex == null) {\n      entryIndex = this.data[0].values.length - 1;\n    }\n    if (drawColumn == null) {\n      drawColumn = this.options.windowSize;\n    }\n    entries = [];\n    bucketTotals = (function() {\n      var k, ref1, results;\n      results = [];\n      for (i = k = 0, ref1 = this.options.buckets; 0 <= ref1 ? k < ref1 : k > ref1; i = 0 <= ref1 ? ++k : --k) {\n        results.push(0);\n      }\n      return results;\n    }).call(this);\n    maxTotal = 0;\n    ref1 = this.getVisibleLayers();\n    for (k = 0, len = ref1.length; k < len; k++) {\n      layer = ref1[k];\n      entry = this._getBuckets(layer.values[entryIndex]);\n      ref2 = entry.buckets;\n      for (bucket in ref2) {\n        if (!hasProp.call(ref2, bucket)) continue;\n        count = ref2[bucket];\n        bucketTotals[bucket] += count;\n      }\n      maxTotal += entry.max;\n      styles = this.getStyles(\".\" + (layer.className.split(' ').join('.')) + \" rect.bucket\");\n      entry.color = styles.fill;\n      entries.push(entry);\n    }\n    xPos = drawColumn * w;\n    this.p.clearRect(xPos, 0, w, this.paintHeight);\n    j = this.options.buckets;\n    results = [];\n    for (bucket in bucketTotals) {\n      if (!hasProp.call(bucketTotals, bucket)) continue;\n      sum = bucketTotals[bucket];\n      color = this._avgLab(entries, bucket);\n      max = 0;\n      for (m = 0, len1 = entries.length; m < len1; m++) {\n        entry = entries[m];\n        max += (entry.buckets[bucket] / sum) * maxTotal;\n      }\n      if (sum > 0 || this.options.paintZeroValues) {\n        this.p.fillStyle = this._computeColor(sum, max, color);\n        this.p.fillRect(xPos, (j - 1) * h, w - this.options.bucketPadding, h - this.options.bucketPadding);\n      }\n      results.push(j--);\n    }\n    return results;\n  };\n\n  Heatmap.prototype._shiftPaintCanvas = function() {\n    var data;\n    data = this.p.getImageData(this.w(), 0, this.paintWidth - this.w(), this.paintHeight);\n    return this.p.putImageData(data, 0, 0);\n  };\n\n  Heatmap.prototype._avgLab = function(entries, bucket) {\n    var a, b, color, entry, i, k, l, len, ratio, ref, total, value;\n    ref = [0, 0, 0, 0], l = ref[0], a = ref[1], b = ref[2], total = ref[3];\n    for (k = 0, len = entries.length; k < len; k++) {\n      entry = entries[k];\n      if (entry.buckets[bucket] == null) {\n        continue;\n      }\n      total += entry.buckets[bucket];\n    }\n    for (i in entries) {\n      if (!hasProp.call(entries, i)) continue;\n      entry = entries[i];\n      if (entry.buckets[bucket] != null) {\n        value = entry.buckets[bucket] | 0;\n      } else {\n        value = 0;\n      }\n      ratio = value / total;\n      color = d3.lab(entry.color);\n      l += ratio * color.l;\n      a += ratio * color.a;\n      b += ratio * color.b;\n    }\n    return d3.lab(l, a, b).toString();\n  };\n\n  Heatmap.prototype.draw = function(delta) {\n    if (delta == null) {\n      delta = 0;\n    }\n    this.clear();\n    this.ctx.drawImage(this.paint, delta, 0);\n    return Heatmap.__super__.draw.call(this);\n  };\n\n  Heatmap.prototype.bucketsChanged = function() {\n    return this.redraw();\n  };\n\n  Heatmap.prototype.bucketRangeChanged = function() {\n    this._transitionRangeAxes();\n    return this.redraw();\n  };\n\n  Heatmap.prototype.opacityChanged = function() {\n    this._setOpacityFunction();\n    return this.redraw();\n  };\n\n  Heatmap.prototype.bucketPaddingChanged = function() {\n    return this.redraw();\n  };\n\n  Heatmap.prototype.paintZeroValuesChanged = function() {\n    return this.redraw();\n  };\n\n  Heatmap.prototype.cutOutliersChanged = function() {\n    return this.redraw();\n  };\n\n  Heatmap.prototype.layerChanged = function() {\n    return this.redraw();\n  };\n\n  return Heatmap;\n\n})(Epoch.Time.Plot);\n\nvar extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nEpoch.Time.Line = (function(superClass) {\n  extend(Line, superClass);\n\n  function Line(options) {\n    var base;\n    this.options = options != null ? options : {};\n    if ((base = this.options).type == null) {\n      base.type = 'time.line';\n    }\n    Line.__super__.constructor.call(this, this.options);\n    this.draw();\n  }\n\n  Line.prototype.setStyles = function(className) {\n    var styles;\n    styles = this.getStyles(\"g.\" + (className.replace(/\\s/g, '.')) + \" path.line\");\n    this.ctx.fillStyle = styles.fill;\n    this.ctx.strokeStyle = styles.stroke;\n    return this.ctx.lineWidth = this.pixelRatio * styles['stroke-width'].replace('px', '');\n  };\n\n  Line.prototype.draw = function(delta) {\n    var args, entry, i, j, k, layer, len, ref, ref1, trans, w, y;\n    if (delta == null) {\n      delta = 0;\n    }\n    this.clear();\n    w = this.w();\n    ref = this.getVisibleLayers();\n    for (j = 0, len = ref.length; j < len; j++) {\n      layer = ref[j];\n      if (!Epoch.isNonEmptyArray(layer.values)) {\n        continue;\n      }\n      this.setStyles(layer.className);\n      this.ctx.beginPath();\n      y = this.y(layer.range);\n      ref1 = [this.options.windowSize, layer.values.length, this.inTransition()], i = ref1[0], k = ref1[1], trans = ref1[2];\n      while ((--i >= -2) && (--k >= 0)) {\n        entry = layer.values[k];\n        args = [(i + 1) * w + delta, y(entry.y)];\n        if (trans) {\n          args[0] += w;\n        }\n        if (i === this.options.windowSize - 1) {\n          this.ctx.moveTo.apply(this.ctx, args);\n        } else {\n          this.ctx.lineTo.apply(this.ctx, args);\n        }\n      }\n      this.ctx.stroke();\n    }\n    return Line.__super__.draw.call(this);\n  };\n\n  return Line;\n\n})(Epoch.Time.Plot);\n\nEpoch._typeMap = {\n  'area': Epoch.Chart.Area,\n  'bar': Epoch.Chart.Bar,\n  'line': Epoch.Chart.Line,\n  'pie': Epoch.Chart.Pie,\n  'scatter': Epoch.Chart.Scatter,\n  'histogram': Epoch.Chart.Histogram,\n  'time.area': Epoch.Time.Area,\n  'time.bar': Epoch.Time.Bar,\n  'time.line': Epoch.Time.Line,\n  'time.gauge': Epoch.Time.Gauge,\n  'time.heatmap': Epoch.Time.Heatmap\n};\n\nvar jQueryModule;\n\njQueryModule = function($) {\n  var DATA_NAME;\n  DATA_NAME = 'epoch-chart';\n  return $.fn.epoch = function(options) {\n    var chart, klass;\n    options.el = this.get(0);\n    if ((chart = this.data(DATA_NAME)) == null) {\n      klass = Epoch._typeMap[options.type];\n      if (klass == null) {\n        Epoch.exception(\"Unknown chart type '\" + options.type + \"'\");\n      }\n      this.data(DATA_NAME, (chart = new klass(options)));\n    }\n    return chart;\n  };\n};\n\nif (window.jQuery != null) {\n  jQueryModule(jQuery);\n}\n\nvar MooToolsModule;\n\nMooToolsModule = function() {\n  var DATA_NAME;\n  DATA_NAME = 'epoch-chart';\n  return Element.implement('epoch', function(options) {\n    var chart, klass, self;\n    self = $$(this);\n    if ((chart = self.retrieve(DATA_NAME)[0]) == null) {\n      options.el = this;\n      klass = Epoch._typeMap[options.type];\n      if (klass == null) {\n        Epoch.exception(\"Unknown chart type '\" + options.type + \"'\");\n      }\n      self.store(DATA_NAME, (chart = new klass(options)));\n    }\n    return chart;\n  });\n};\n\nif (window.MooTools != null) {\n  MooToolsModule();\n}\n\nvar zeptoModule;\n\nzeptoModule = function($) {\n  var DATA_NAME, chartId, chartMap, next_cid;\n  DATA_NAME = 'epoch-chart';\n  chartMap = {};\n  chartId = 0;\n  next_cid = function() {\n    return DATA_NAME + \"-\" + (++chartId);\n  };\n  return $.extend($.fn, {\n    epoch: function(options) {\n      var chart, cid, klass;\n      if ((cid = this.data(DATA_NAME)) != null) {\n        return chartMap[cid];\n      }\n      options.el = this.get(0);\n      klass = Epoch._typeMap[options.type];\n      if (klass == null) {\n        Epoch.exception(\"Unknown chart type '\" + options.type + \"'\");\n      }\n      this.data(DATA_NAME, (cid = next_cid()));\n      chart = new klass(options);\n      chartMap[cid] = chart;\n      return chart;\n    }\n  });\n};\n\nif (window.Zepto != null) {\n  zeptoModule(Zepto);\n}\n"],"sourceRoot":""}